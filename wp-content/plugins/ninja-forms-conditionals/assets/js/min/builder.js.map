{"version":3,"sources":["../../../config-wrap-start-default.js","../lib/almond.js","controllers/templateHelpers.js","views/advanced/whenItem.js","views/advanced/firstWhenItem.js","views/advanced/whenCollection.js","views/advanced/thenItem.js","views/advanced/thenCollection.js","views/advanced/elseItem.js","views/advanced/elseCollection.js","views/advanced/conditionItem.js","views/advanced/conditionCollection.js","views/actions/whenItem.js","views/actions/whenCollection.js","views/actions/conditionLayout.js","controllers/returnChildView.js","models/whenModel.js","models/whenCollection.js","models/thenModel.js","models/thenCollection.js","models/elseModel.js","models/elseCollection.js","models/conditionModel.js","models/conditionCollection.js","views/drawerHeader.js","controllers/newCondition.js","controllers/updateSettings.js","controllers/clickControls.js","controllers/undo.js","controllers/maybeModifyElse.js","controllers/coreValues.js","controllers/coreComparators.js","controllers/coreTriggers.js","controllers/getDrawerHeader.js","controllers/trackKeyChanges.js","controllers/maybeConvertConditions.js","controllers/filters.js","controllers/loadControllers.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","controller","Marionette","extend","initialize","this","listenTo","nfRadio","channel","addTemplateHelpers","model","set","renderKeySelect","renderComparators","renderTriggers","renderWhenValue","renderItemValue","currentValue","modelType","groups","fieldCollection","request","fieldOptions","_","chain","models","filter","field","get","label","key","sortBy","toLowerCase","type","options","calcCollection","calcOptions","calc","filters","each","template","Backbone","Radio","tmp","currentComparator","defaultComparators","equal","nfcli18n","templateHelperEquals","notequal","templateHelperDoesNotEqual","contains","templateHelperContains","notcontains","templateHelperDoesNotContain","greater","templateHelperGreaterThan","less","templateHelperLessThan","comparators","omit","lessequal","templateHelperLessThanOrEqual","greaterequal","templateHelperGreaterThanOrEqual","fieldModel","typeModel","currentTrigger","defaultTriggers","show_field","templateHelperShowField","hide_field","templateHelperHideField","change_value","templateHelperChangeValue","triggers","comparator","defaultHTML","html","trigger","view","ItemView","render","events","change .setting","click .nf-remove-when","changeSetting","clickRemove","WhenItem","FirstWhenItem","CollectionView","getChildView","item","collection","first","firstWhenDiv","conditionModel","attachHtml","collectionView","childView","append","el","isBuffering","_bufferedChildren","_insertBefore","_insertAfter","click .nf-remove-then","ThenItem","click .nf-remove-else","ElseItem","WhenCollectionView","ThenCollectionView","ElseCollectionView","LayoutView","regions","when","then","else","drawerClosed","onRender","find","show","click .nf-remove-condition","click .nf-collapse-condition","click .nf-add-when","click .nf-add-then","click .nf-add-else","clickCollapse","clickAddWhen","clickAddThen","clickAddElse","conditionItem","dataModel","onShow","add","onBeforeDestroy","reset","WhenCollection","change .condition-setting","AdvancedView","ActionsView","reply","getAdvancedChildView","getActionChildView","settingModel","Model","defaults","connector","WhenModel","Collection","ThenModel","ElseModel","ThenCollection","ElseCollection","collapsed","process","ConditionModel","click .nf-add-new","clickAddNew","addNew","conditionCollection","object","newConditionCondition","change","dashicon","data","updateSetting","target","val","before","after","changes","attr","removeCondition","collapseCondition","removeWhen","removeThen","removeElse","addWhen","addThen","addElse","remove","clickControlsConditionlabel","whenModel","removeItem","clickControlsConditionWhen","thenModel","clickControlsConditionThen","elseModel","clickControlsConditionElse","itemModel","clickControlsConditionWhenCriteron","clickControlsConditionDoItem","clickControlsConditionElseItem","undoAddCondition","undoRemoveCondition","undoAddWhen","undoAddThen","undoAddElse","undoRemoveWhen","undoRemoveThen","undoRemoveElse","undoAll","changeCollection","results","where","changeModel","maybeRemoveChange","maybeAddElse","opposite","findWhere","getCheckboxValue","getListValue","getListCountryValue","nfListCountries","getCheckboxComparators","getListSingleComparators","getListComparators","is","coreComparatorsIs","isnot","coreComparatorsIsNot","has","coreComparatorsHasSelected","hasnot","coreComparatorsDoesNotHaveSelected","getListTriggers","getSubmitTriggers","select_option","coreTriggersSelectOption","deselect_option","coreTriggersDeselectOption","show_option","coreTriggersShowOption","hide_option","coreTriggersHideOption","DrawerHeaderView","getDrawerHeaderView","registerKeyChangeTracker","updateKey","keyModel","oldKey","_previousAttributes","newKey","maybeConvertConditions","actionModel","conditions","addFilter","getFilters","TemplateHelpers","ReturnChildView","ConditionCollection","NewCondition","UpdateSettings","ClickControls","Undo","MaybeModifyElse","CoreValues","CoreComparators","CoreTriggers","GetDrawerHeader","TrackKeyChanges","MaybeConvertConditions","Filters","LoadControllers","NFConditionalLogic","Application","afterNFLoad","onStart","app","nfConditionalLogic","start"],"mappings":"CAAA,WCUA,GAAAA,GAAAC,EAAAC,GACA,SAAAC,GAUA,QAAAC,GAAAC,EAAAC,GACA,MAAAC,GAAAC,KAAAH,EAAAC,GAWA,QAAAG,GAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAZ,GAAAA,EAAAa,MAAA,KACAC,EAAAC,EAAAD,IACAE,EAAAF,GAAAA,EAAA,QAGA,IAAAf,GAAA,MAAAA,EAAAkB,OAAA,GAIA,GAAAjB,EAAA,CAgBA,IAfAD,EAAAA,EAAAc,MAAA,KACAR,EAAAN,EAAAmB,OAAA,EAGAH,EAAAI,cAAAC,EAAAC,KAAAtB,EAAAM,MACAN,EAAAM,GAAAN,EAAAM,GAAAiB,QAAAF,EAAA,KAOArB,EAAAa,EAAAW,MAAA,EAAAX,EAAAM,OAAA,GAAAM,OAAAzB,GAGAU,EAAA,EAAAA,EAAAV,EAAAmB,OAAAT,GAAA,EAEA,GADAE,EAAAZ,EAAAU,GACA,MAAAE,EACAZ,EAAA0B,OAAAhB,EAAA,GACAA,GAAA,MACA,IAAA,OAAAE,EAAA,CACA,GAAA,IAAAF,IAAA,OAAAV,EAAA,IAAA,OAAAA,EAAA,IAOA,KACAU,GAAA,IACAV,EAAA0B,OAAAhB,EAAA,EAAA,GACAA,GAAA,GAMAV,EAAAA,EAAA2B,KAAA,SACA,KAAA3B,EAAA4B,QAAA,QAGA5B,EAAAA,EAAA6B,UAAA,GAKA,KAAAhB,GAAAI,IAAAF,EAAA,CAGA,IAFAb,EAAAF,EAAAc,MAAA,KAEAJ,EAAAR,EAAAiB,OAAAT,EAAA,EAAAA,GAAA,EAAA,CAGA,GAFAP,EAAAD,EAAAsB,MAAA,EAAAd,GAAAiB,KAAA,KAEAd,EAGA,IAAAF,EAAAE,EAAAM,OAAAR,EAAA,EAAAA,GAAA,EAKA,GAJAP,EAAAW,EAAAF,EAAAW,MAAA,EAAAb,GAAAgB,KAAA,MAIAvB,IACAA,EAAAA,EAAAD,IACA,CAEAE,EAAAD,EACAG,EAAAG,CACA,OAMA,GAAAL,EACA,OAMAG,GAAAS,GAAAA,EAAAd,KACAK,EAAAS,EAAAd,GACAM,EAAAC,IAIAL,GAAAG,IACAH,EAAAG,EACAD,EAAAE,GAGAJ,IACAH,EAAAwB,OAAA,EAAAnB,EAAAF,GACAL,EAAAE,EAAAyB,KAAA,MAIA,MAAA3B,GAGA,QAAA8B,GAAAC,EAAAC,GACA,MAAA,YAIA,GAAAC,GAAAC,EAAApC,KAAAqC,UAAA,EAQA,OAHA,gBAAAF,GAAA,IAAA,IAAAA,EAAAd,QACAc,EAAAG,KAAA,MAEAC,EAAAC,MAAA7C,EAAAwC,EAAAR,QAAAM,EAAAC,MAIA,QAAAO,GAAAR,GACA,MAAA,UAAA/B,GACA,MAAAD,GAAAC,EAAA+B,IAIA,QAAAS,GAAAC,GACA,MAAA,UAAAC,GACAC,EAAAF,GAAAC,GAIA,QAAAE,GAAA5C,GACA,GAAAN,EAAAmD,EAAA7C,GAAA,CACA,GAAAiC,GAAAY,EAAA7C,SACA6C,GAAA7C,GACA8C,EAAA9C,IAAA,EACA+C,EAAAT,MAAA7C,EAAAwC,GAGA,IAAAvC,EAAAiD,EAAA3C,KAAAN,EAAAoD,EAAA9C,GACA,KAAA,IAAAgD,OAAA,MAAAhD,EAEA,OAAA2C,GAAA3C,GAMA,QAAAiD,GAAAjD,GACA,GAAAkD,GACAC,EAAAnD,EAAAA,EAAA4B,QAAA,MAAA,CAKA,OAJAuB,IAAA,IACAD,EAAAlD,EAAA6B,UAAA,EAAAsB,GACAnD,EAAAA,EAAA6B,UAAAsB,EAAA,EAAAnD,EAAAmB,UAEA+B,EAAAlD,GA8CA,QAAAoD,GAAApD,GACA,MAAA,YACA,MAAAgB,IAAAA,EAAAA,QAAAA,EAAAA,OAAAhB,QA1OA,GAAA+C,GAAAV,EAAAgB,EAAAC,EACAX,KACAE,KACA7B,KACA8B,KACAjD,EAAA0D,OAAAC,UAAAC,eACAvB,KAAAV,MACAH,EAAA,OA2LAgC,GAAA,SAAArD,EAAA+B,GACA,GAAA2B,GACAC,EAAAV,EAAAjD,GACAkD,EAAAS,EAAA,EA2BA,OAzBA3D,GAAA2D,EAAA,GAEAT,IACAA,EAAAnD,EAAAmD,EAAAnB,GACA2B,EAAAd,EAAAM,IAIAA,EAEAlD,EADA0D,GAAAA,EAAA3D,UACA2D,EAAA3D,UAAAC,EAAAuC,EAAAR,IAEAhC,EAAAC,EAAA+B,IAGA/B,EAAAD,EAAAC,EAAA+B,GACA4B,EAAAV,EAAAjD,GACAkD,EAAAS,EAAA,GACA3D,EAAA2D,EAAA,GACAT,IACAQ,EAAAd,EAAAM,MAMAU,EAAAV,EAAAA,EAAA,IAAAlD,EAAAA,EACA6D,EAAA7D,EACA8D,GAAAZ,EACAa,EAAAL,IAUAJ,GACA/D,QAAA,SAAAS,GACA,MAAA8B,GAAA9B,IAEAgE,QAAA,SAAAhE,GACA,GAAAiE,GAAAtB,EAAA3C,EACA,OAAA,mBAAAiE,GACAA,EAEAtB,EAAA3C,OAGAkE,OAAA,SAAAlE,GACA,OACAmE,GAAAnE,EACAoE,IAAA,GACAJ,QAAArB,EAAA3C,GACAgB,OAAAoC,EAAApD,MAKA+C,EAAA,SAAA/C,EAAAqE,EAAAC,EAAAvC,GACA,GAAAwC,GAAA9B,EAAA+B,EAAAzD,EAAAL,EAGA+D,EAFAxC,KACAyC,QAAAJ,EAOA,IAHAvC,EAAAA,GAAA/B,EAGA,cAAA0E,GAAA,aAAAA,EAAA,CAKA,IADAL,GAAAA,EAAAlD,QAAAmD,EAAAnD,QAAA,UAAA,UAAA,UAAAkD,EACA3D,EAAA,EAAAA,EAAA2D,EAAAlD,OAAAT,GAAA,EAKA,GAJAK,EAAAsC,EAAAgB,EAAA3D,GAAAqB,GACAU,EAAA1B,EAAA6C,EAGA,YAAAnB,EACAR,EAAAvB,GAAA4C,EAAA/D,QAAAS,OACA,IAAA,YAAAyC,EAEAR,EAAAvB,GAAA4C,EAAAU,QAAAhE,GACAyE,GAAA,MACA,IAAA,WAAAhC,EAEA8B,EAAAtC,EAAAvB,GAAA4C,EAAAY,OAAAlE,OACA,IAAAN,EAAAiD,EAAAF,IACA/C,EAAAmD,EAAAJ,IACA/C,EAAAoD,EAAAL,GACAR,EAAAvB,GAAAkC,EAAAH,OACA,CAAA,IAAA1B,EAAAgD,EAIA,KAAA,IAAAf,OAAAhD,EAAA,YAAAyC,EAHA1B,GAAAgD,EAAAY,KAAA5D,EAAA8C,EAAA/B,EAAAC,GAAA,GAAAS,EAAAC,OACAR,EAAAvB,GAAAiC,EAAAF,GAMA+B,EAAAF,EAAAA,EAAAhC,MAAAK,EAAA3C,GAAAiC,GAAA2C,OAEA5E,IAIAuE,GAAAA,EAAAP,UAAAvE,GACA8E,EAAAP,UAAArB,EAAA3C,GACA2C,EAAA3C,GAAAuE,EAAAP,QACAQ,IAAA/E,GAAAgF,IAEA9B,EAAA3C,GAAAwE,QAGAxE,KAGA2C,EAAA3C,GAAAsE,IAIAhF,EAAAC,EAAA8C,EAAA,SAAAgC,EAAAC,EAAAvC,EAAAC,EAAA6C,GACA,GAAA,gBAAAR,GACA,MAAAf,GAAAe,GAEAf,EAAAe,GAAAC,GAMA1B,EAAAS,EAAAgB,EAAAC,GAAAV,EACA,KAAAS,EAAA3C,OAAA,CAMA,GAJAV,EAAAqD,EACArD,EAAAqD,MACAhC,EAAArB,EAAAqD,KAAArD,EAAAsD,WAEAA,EACA,MAGAA,GAAA5C,QAGA2C,EAAAC,EACAA,EAAAvC,EACAA,EAAA,MAEAsC,EAAA5E,EA6BA,MAxBA6E,GAAAA,GAAA,aAIA,kBAAAvC,KACAA,EAAAC,EACAA,EAAA6C,GAIA7C,EACAe,EAAAtD,EAAA4E,EAAAC,EAAAvC,GAQA+C,WAAA,WACA/B,EAAAtD,EAAA4E,EAAAC,EAAAvC,IACA,GAGAM,GAOAA,EAAArB,OAAA,SAAA+D,GACA,MAAA1C,GAAA0C,IAMAzF,EAAA0F,SAAArC,EAEAnD,EAAA,SAAAQ,EAAAqE,EAAAC,GACA,GAAA,gBAAAtE,GACA,KAAA,IAAAgD,OAAA,4DAIAqB,GAAA3C,SAIA4C,EAAAD,EACAA,MAGA3E,EAAAiD,EAAA3C,IAAAN,EAAAmD,EAAA7C,KACA6C,EAAA7C,IAAAA,EAAAqE,EAAAC,KAIA9E,EAAAyF,KACAC,QAAA,MAIA1F,EAAA,gBAAA,cCxaAA,EAAA,iCAAA,WACA,GAAA2F,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,cAAA,aAAAH,KAAAI,oBACAJ,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAAI,oBACAJ,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAAI,oBACAJ,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAAI,qBAIAA,mBAAA,SAAAC,GACAA,EAAAC,IAAA,kBAAAN,KAAAO,iBACAF,EAAAC,IAAA,oBAAAN,KAAAQ,mBACAH,EAAAC,IAAA,iBAAAN,KAAAS,gBACAJ,EAAAC,IAAA,kBAAAN,KAAAU,iBACAL,EAAAC,IAAA,kBAAAN,KAAAW,kBAGAJ,gBAAA,SAAAK,EAAAC,GAEA,GAAAC,MAEAC,EAAAb,EAAAC,QAAA,UAAAa,QAAA,kBACAC,EAAAC,EAAAC,MAAAJ,EAAAK,QACAC,OAAA,SAAAC,GAAA,OAAApB,EAAAC,QAAA,+BAAAmB,EAAAC,IAAA,SAAAP,QAAA,OAAAH,KAAA,IACArF,IAAA,SAAA8F,GACA,GAAAE,GAAAF,EAAAC,IAAA,QAIA,OAHA,mBAAAD,GAAAC,IAAA,gBAAA,EAAAD,EAAAC,IAAA,eAAA3F,SACA4F,EAAAF,EAAAC,IAAA,iBAEAE,IAAAH,EAAAC,IAAA,OAAAC,MAAAA,KAEAE,OAAA,SAAAJ,GACA,MAAAA,GAAAE,MAAAG,gBAEAxE,OAEA2D,GAAAjE,MAAA2E,MAAA,SAAAI,KAAA,QAAAC,QAAAZ,GAEA,IAAAa,GAAA5B,EAAAC,QAAA,YAAAa,QAAA,cAAA,eAKA,IAAA,QAAAH,GAAA,EAAAiB,EAAAlG,OAAA,CACA,GAAAmG,GAAAD,EAAAtG,IAAA,SAAAwG,GACA,OAAAP,IAAAO,EAAAT,IAAA,QAAAC,MAAAQ,EAAAT,IAAA,UAGAT,GAAAjE,MAAA2E,MAAA,eAAAI,KAAA,OAAAC,QAAAE,IAMA,GAAAE,GAAA/B,EAAAC,QAAA,cAAAa,QAAA,mBACAE,GAAAgB,KAAAD,EAAA,SAAAZ,GACAP,EAAAO,EAAAP,EAAAD,IAMA,IAAAsB,GAAAC,SAAAC,MAAAlC,QAAA,OAAAa,QAAA,eAAA,0BAEAsB,EAAAH,GAAArB,OAAAA,EAAAF,aAAAA,GACA,OAAA0B,IAGA9B,kBAAA,SAAAoB,EAAAH,EAAAc,GACA,GAAAC,IACAC,OACAjB,MAAAkB,SAAAC,qBACAxF,MAAA,SAGAyF,UACApB,MAAAkB,SAAAG,2BACA1F,MAAA,YAGA2F,UACAtB,MAAAkB,SAAAK,uBACA5F,MAAA,YAGA6F,aACAxB,MAAAkB,SAAAO,6BACA9F,MAAA,eAGA+F,SACA1B,MAAAkB,SAAAS,0BACAhG,MAAA,WAGAiG,MACA5B,MAAAkB,SAAAW,uBACAlG,MAAA,QAIA,IAAAsE,EAIA,GAAA,QAAAG,EAAA,CACA,GAAA0B,GAAApC,EAAAqC,KAAAf,EAAA,WAAA,cACAtB,GAAApB,OAAAwD,GACAE,WACAhC,MAAAkB,SAAAe,8BACAtG,MAAA,aAGAuG,cACAlC,MAAAkB,SAAAiB,iCACAxG,MAAA,sBAGA,CAUA,GAAAyG,GAAA1D,EAAAC,QAAA,UAAAa,QAAA,YAAAS,EAEA,IAAAmC,EAAA,CACA,GAAAN,GAAApD,EAAAC,QAAA,cAAAyD,EAAArC,IAAA,SAAAP,QAAA,kBAAAwB,EAAAD,EACA,KAAAe,EAAA,CACA,GAAAO,GAAA3D,EAAAC,QAAA,UAAAa,QAAA,WAAA4C,EAAArC,IAAA,QACA+B,GAAApD,EAAAC,QAAA,cAAA0D,EAAAtC,IAAA,eAAAP,QAAA,kBAAAwB,EAAAD,IAAAC,OAGA,IAAAc,GAAAd,MAIA,IAAAc,GAAAd,CAMA,IAAAL,GAAAC,SAAAC,MAAAlC,QAAA,OAAAa,QAAA,eAAA,0BACA,OAAAmB,IAAAmB,YAAAA,EAAAf,kBAAAA,KAGA9B,eAAA,SAAAmB,EAAAH,EAAAqC,EAAA3G,GACA,GAAA4G,IACAC,YACAxC,MAAAkB,SAAAuB,wBACA9G,MAAA,cAGA+G,YACA1C,MAAAkB,SAAAyB,wBACAhH,MAAA,cAGAiH,cACA5C,MAAAkB,SAAA2B,0BACAlH,MAAA,gBAIA,IAAAsE,GAAA,SAAAG,EAAA,CAUA,GAAAgC,GAAA1D,EAAAC,QAAA,UAAAa,QAAA,YAAAS,EAEA,IAAA,mBAAAmC,GAAA,CACA,GAAAC,GAAA3D,EAAAC,QAAA,UAAAa,QAAA,WAAA4C,EAAArC,IAAA,SAEA+C,EAAApE,EAAAC,QAAA,cAAAyD,EAAArC,IAAA,SAAAP,QAAA,eAAA+C,EACAO,KACAA,EAAApE,EAAAC,QAAA,cAAA0D,EAAAtC,IAAA,eAAAP,QAAA,eAAA+C,IAAAA,OAGA,IAAAO,GAAApE,EAAAC,QAAA,cAAAyB,GAAAZ,QAAA,eAAA+C,IAAAA,MAGA,IAAAO,GAAApE,EAAAC,QAAA,cAAAyB,GAAAZ,QAAA,eAAA+C,IAAAA,CAOA,IAAA5B,GAAAC,SAAAC,MAAAlC,QAAA,OAAAa,QAAA,eAAA,uBACA,OAAAmB,IAAAmC,SAAAA,EAAAR,eAAAA,KAGApD,gBAAA,SAAAkB,EAAAH,EAAA8C,EAAApH,GAIA,GAAAgF,GAAAC,SAAAC,MAAAlC,QAAA,OAAAa,QAAA,eAAA,6BACAwD,EAAArC,GAAAhF,MAAAA,GAKA,IAAAsE,GAAA,QAAAG,EAAA,CAUA,GAAAgC,GAAA1D,EAAAC,QAAA,UAAAa,QAAA,YAAAS,EAEA,IAAAmC,EAAA,CACA,GAAAa,GAAAvE,EAAAC,QAAA,cAAAyD,EAAArC,IAAA,SAAAP,QAAA,iBAAAS,EAAA8C,EAAApH,EACA,KAAAsH,EAAA,CACA,GAAAZ,GAAA3D,EAAAC,QAAA,UAAAa,QAAA,WAAA4C,EAAArC,IAAA,QACAkD,GAAAvE,EAAAC,QAAA,cAAA0D,EAAAtC,IAAA,eAAAP,QAAA,iBAAAS,EAAA8C,EAAApH,IAAAqH,OAGAC,GAAAD,MAGA,IAAAC,GAAAD,CAGA,OAAAC,IAGA9D,gBAAA,SAAAc,EAAAiD,EAAAvH,GAOA,GAAA,gBAAAuH,GACA,iBAAAA,GACA,mBAAAA,GACA,eAAAA,GACA,eAAAA,EAEA,MAAA,EAGA,IAAAvC,GAAAC,SAAAC,MAAAlC,QAAA,OAAAa,QAAA,eAAA,6BACAwD,EAAArC,GAAAhF,MAAAA,GAEA,IAAAsE,EAAA,CAUA,GAAAmC,GAAA1D,EAAAC,QAAA,UAAAa,QAAA,YAAAS,EAEA,IAAA,mBAAAmC,GAAA,CACA,GAAAC,GAAA3D,EAAAC,QAAA,UAAAa,QAAA,WAAA4C,EAAArC,IAAA,SACAkD,EAAAvE,EAAAC,QAAA,cAAAyD,EAAArC,IAAA,SAAAP,QAAA,iBAAAS,EAAAiD,EAAAvH,EACAsH,KACAA,EAAAvE,EAAAC,QAAA,cAAA0D,EAAAtC,IAAA,eAAAP,QAAA,iBAAAS,EAAAiD,EAAAvH,IAAAqH,QAIA,IAAAC,GAAAD,CAGA,OAAAC,KAIA,OAAA7E,KChSA3F,EAAA,6BAAA,WACA,GAAA0K,GAAA9E,WAAA+E,SAAA9E,QACAqC,SAAA,iCAEApC,WAAA,WACAC,KAAAC,SAAAD,KAAAK,MAAA,SAAAL,KAAA6E,SAGAC,QACAC,kBAAA,gBACAC,wBAAA,eAGAC,cAAA,SAAAvG,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,iBAAAhG,EAAAsB,KAAAK,QAGA6E,YAAA,SAAAxG,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,mBAAAhG,EAAAsB,KAAAK,SAIA,OAAAsE,KCtBA1K,EAAA,kCAAA,WACA,GAAA0K,GAAA9E,WAAA+E,SAAA9E,QACAqC,SAAA,uCAEApC,WAAA,WACAC,KAAAC,SAAAD,KAAAK,MAAA,SAAAL,KAAA6E,SAGAC,QACAC,kBAAA,iBAGAE,cAAA,SAAAvG,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,iBAAAhG,EAAAsB,KAAAK,SAIA,OAAAsE,KCjBA1K,EAAA,iCAAA,0BAAA,gCAAA,SAAAkL,EAAAC,GACA,GAAAT,GAAA9E,WAAAwF,eAAAvF,QACAwF,aAAA,SAAAC,GACA,MAAAA,GAAAC,WAAAC,SAAAF,EACAH,EAEAD,GAKApF,WAAA,SAAA8B,GACA7B,KAAA0F,aAAA7D,EAAA6D,aACA1F,KAAA2F,eAAA9D,EAAA8D,gBAIAC,WAAA,SAAAC,EAAAC,EAAAlI,GACA,GAAAA,EACAoC,KAAA0F,aAAAK,OAAAD,EAAAE,IAEAhG,KAAA2F,eAAApE,IAAA,eACAsE,EAAAI,YAIAJ,EAAAK,kBAAA/J,OAAAyB,EAAA,EAAAkI,GAKAD,EAAAM,cAAAL,EAAAlI,IACAiI,EAAAO,aAAAN,MASA,OAAAnB,KCzCA1K,EAAA,6BAAA,WACA,GAAA0K,GAAA9E,WAAA+E,SAAA9E,QACAqC,SAAA,2BAEApC,WAAA,WACAC,KAAAC,SAAAD,KAAAK,MAAA,SAAAL,KAAA6E,SAGAC,QACAC,kBAAA,gBACAsB,wBAAA,eAGApB,cAAA,SAAAvG,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,iBAAAhG,EAAAsB,KAAAK,OACAH,EAAAC,QAAA,cAAAuE,QAAA,cAAAhG,EAAAsB,KAAAK,QAGA6E,YAAA,SAAAxG,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,mBAAAhG,EAAAsB,KAAAK,SAIA,OAAAsE,KCvBA1K,EAAA,iCAAA,2BAAA,SAAAqM,GACA,GAAA3B,GAAA9E,WAAAwF,eAAAvF,QACAgG,UAAAQ,EAEAvG,WAAA,SAAA8B,MAKA,OAAA8C,KCTA1K,EAAA,6BAAA,WACA,GAAA0K,GAAA9E,WAAA+E,SAAA9E,QACAqC,SAAA,2BAEApC,WAAA,WACAC,KAAAC,SAAAD,KAAAK,MAAA,SAAAL,KAAA6E,SAGAC,QACAC,kBAAA,gBACAwB,wBAAA,eAGAtB,cAAA,SAAAvG,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,iBAAAhG,EAAAsB,KAAAK,QAGA6E,YAAA,SAAAxG,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,mBAAAhG,EAAAsB,KAAAK,SAIA,OAAAsE,KCtBA1K,EAAA,iCAAA,2BAAA,SAAAuM,GACA,GAAA7B,GAAA9E,WAAAwF,eAAAvF,QACAgG,UAAAU,EAEAzG,WAAA,SAAA8B,MAKA,OAAA8C,KCTA1K,EAAA,gCAAA,gCAAA,gCAAA,iCAAA,SAAAwM,EAAAC,EAAAC,GACA,GAAAhC,GAAA9E,WAAA+G,WAAA9G,QACAqC,SAAA,iCACA0E,SACAC,KAAA,kBACAC,KAAA,kBACAC,KAAA,mBAGAjH,WAAA,WAIAC,KAAAC,SAAAD,KAAAK,MAAA,mBAAAL,KAAA6E,QAKA7E,KAAAC,SAAAC,EAAAC,QAAA,UAAA,SAAAH,KAAAiH,eAGAC,SAAA,WACA,GAAAxB,GAAA/F,OAAAK,KAAAgG,IAAAmB,KAAA,iBACAnH,MAAA8G,KAAAM,KAAA,GAAAX,IAAAjB,WAAAxF,KAAAK,MAAAkB,IAAA,QAAAmE,aAAAA,EAAAC,eAAA3F,KAAAK,SACAL,KAAAK,MAAAkB,IAAA,eACAvB,KAAA+G,KAAAK,KAAA,GAAAV,IAAAlB,WAAAxF,KAAAK,MAAAkB,IAAA,WACAvB,KAAAgH,KAAAI,KAAA,GAAAT,IAAAnB,WAAAxF,KAAAK,MAAAkB,IAAA,aAIAuD,QACAuC,6BAAA,cACAC,+BAAA,gBACAC,qBAAA,eACAC,qBAAA,eACAC,qBAAA,gBAGAvC,YAAA,SAAAxG,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,wBAAAhG,EAAAsB,KAAAK,QAGAqH,cAAA,SAAAhJ,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,0BAAAhG,EAAAsB,KAAAK,QAGAsH,aAAA,SAAAjJ,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,gBAAAhG,EAAAsB,KAAAK,QAGAuH,aAAA,SAAAlJ,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,gBAAAhG,EAAAsB,KAAAK,QAGAwH,aAAA,SAAAnJ,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,gBAAAhG,EAAAsB,KAAAK,SAIA,OAAAsE,KC3DA1K,EAAA,sCAAA,gCAAA,SAAA6N,GACA,GAAAnD,GAAA9E,WAAAwF,eAAAvF,QACAgG,UAAAgC,EAEA/H,WAAA,SAAA8B,GACA7B,KAAAwF,WAAA3D,EAAAkG,UAAAxG,IAAA,eAGAyG,OAAA,WAIA,GAAAhI,KAAAwF,WAAA5J,QACAoE,KAAAwF,WAAAyC,SAIAC,gBAAA,WAIA,GAAAlI,KAAAwF,WAAA5J,QAAA,EAAAoE,KAAAwF,WAAA5J,QAKA,IAAAoE,KAAAwF,WAAApE,OAAA,GAAAG,IAAA,QAAAH,OAAA,GAAAG,IAAA,QACAvB,KAAAwF,WAAA2C,UAKA,OAAAxD,KChCA1K,EAAA,4BAAA,WACA,GAAA0K,GAAA9E,WAAA+E,SAAA9E,QACAqC,SAAA,qCAEApC,WAAA,WACAC,KAAAC,SAAAD,KAAAK,MAAA,SAAAL,KAAA6E,SAGAC,QACAC,kBAAA,gBACAC,wBAAA,eAGAC,cAAA,SAAAvG,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,iBAAAhG,EAAAsB,KAAAK,QAGA6E,YAAA,SAAAxG,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,mBAAAhG,EAAAsB,KAAAK,SAIA,OAAAsE,KCtBA1K,EAAA,gCAAA,0BAAA,SAAAkL,GACA,GAAAR,GAAA9E,WAAAwF,eAAAvF,QACAgG,UAAAX,EAEApF,WAAA,SAAA8B,KAIAmG,OAAA,WAIA,GAAAhI,KAAAwF,WAAA5J,QACAoE,KAAAwF,WAAAyC,SAIAC,gBAAA,WAIA,GAAAlI,KAAAwF,WAAA5J,QAAA,EAAAoE,KAAAwF,WAAA5J,QAKA,IAAAoE,KAAAwF,WAAApE,OAAA,GAAAG,IAAA,QACAvB,KAAAwF,WAAA2C,UAMA,OAAAxD,KCjCA1K,EAAA,iCAAA,gCAAA,SAAAmO,GACA,GAAAzD,GAAA9E,WAAA+G,WAAA9G,QACAqC,SAAA,uCAEA0E,SACAC,KAAA,YAGA/G,WAAA,SAAA8B,GACA7B,KAAAK,MAAAwB,EAAAkG,UAAAxG,IAAA,cACAM,EAAAkG,UAAAxG,IAAA,gBAEAvB,KAAAwF,WAAA3D,EAAAkG,UAAAxG,IAAA,cAAAA,IAAA,QACAvB,KAAA2F,eAAA9D,EAAAkG,UAAAxG,IAAA,gBAGA2F,SAAA,WACAlH,KAAAwF,YAIAxF,KAAA8G,KAAAM,KAAA,GAAAgB,IAAA5C,WAAAxF,KAAAwF,eAGAV,QACAuD,4BAAA,gBACAd,qBAAA,gBAGAI,aAAA,SAAAjJ,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,gBAAAhG,EAAAsB,KAAAK,QAGA4E,cAAA,SAAAvG,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,iBAAAhG,EAAAsB,KAAAK,SAKA,OAAAsE,KCvCA1K,EAAA,+BAAA,qCAAA,iCAAA,SAAAqO,EAAAC,GACA,GAAA3I,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACAG,EAAAC,QAAA,uBAAAqI,MAAA,uBAAAxI,KAAAyI,sBACAvI,EAAAC,QAAA,qBAAAqI,MAAA,uBAAAxI,KAAA0I,qBAGAD,qBAAA,SAAAE,GACA,MAAAL,IAGAI,mBAAA,SAAAC,GACA,MAAAJ,KAKA,OAAA3I,KCjBA3F,EAAA,sBAAA,WACA,GAAAoG,GAAA+B,SAAAwG,MAAA9I,QACA+I,UACAC,UAAA,MACArH,IAAA,GACA8C,WAAA,GACApH,MAAA,GACAyE,KAAA,QACAf,UAAA,QAGAd,WAAA,WACAG,EAAAC,QAAA,cAAAuE,QAAA,iBAAA1E,QAIA,OAAAK,KChBApG,EAAA,yBAAA,oBAAA,SAAA8O,GACA,GAAAvD,GAAApD,SAAA4G,WAAAlJ,QACAO,MAAA0I,EAEAhJ,WAAA,SAAAqB,EAAAS,GACA7B,KAAA6B,QAAAA,IAGA,OAAA2D,KCRAvL,EAAA,sBAAA,WACA,GAAAoG,GAAA+B,SAAAwG,MAAA9I,QACA+I,UACApH,IAAA,GACAiD,QAAA,GACAvH,MAAA,GACAyE,KAAA,QACAf,UAAA,QAGAd,WAAA,WACAG,EAAAC,QAAA,cAAAuE,QAAA,iBAAA1E,QAIA,OAAAK,KCfApG,EAAA,yBAAA,oBAAA,SAAAgP,GACA,GAAAzD,GAAApD,SAAA4G,WAAAlJ,QACAO,MAAA4I,EAEAlJ,WAAA,SAAAqB,EAAAS,GACA7B,KAAA6B,QAAAA,IAGA,OAAA2D,KCRAvL,EAAA,sBAAA,WACA,GAAAoG,GAAA+B,SAAAwG,MAAA9I,QACA+I,UACApH,IAAA,GACAiD,QAAA,GACAvH,MAAA,GACAyE,KAAA,QACAf,UAAA,QAGAd,WAAA,WACAG,EAAAC,QAAA,cAAAuE,QAAA,iBAAA1E,QAIA,OAAAK,KCfApG,EAAA,yBAAA,oBAAA,SAAAiP,GACA,GAAA1D,GAAApD,SAAA4G,WAAAlJ,QACAO,MAAA6I,EAEAnJ,WAAA,SAAAqB,EAAAS,GACA7B,KAAA6B,QAAAA,IAGA,OAAA2D,KCRAvL,EAAA,yBAAA,wBAAA,wBAAA,yBAAA,SAAAmO,EAAAe,EAAAC,GACA,GAAA/I,GAAA+B,SAAAwG,MAAA9I,QACA+I,UACAQ,WAAA,EACAC,QAAA,EACAR,UAAA,MACAhC,UACAC,UACAC,SAGAjH,WAAA,WACAC,KAAAM,IAAA,OAAA,GAAA8H,GAAApI,KAAAuB,IAAA,SAAAoE,eAAA3F,QACAA,KAAAM,IAAA,OAAA,GAAA6I,GAAAnJ,KAAAuB,IAAA,SAAAoE,eAAA3F,QACAA,KAAAM,IAAA,OAAA,GAAA8I,GAAApJ,KAAAuB,IAAA,SAAAoE,eAAA3F,QAEAE,EAAAC,QAAA,cAAAuE,QAAA,aAAA1E,QAIA,OAAAK,KCpBApG,EAAA,8BAAA,yBAAA,SAAAsP,GACA,GAAA/D,GAAApD,SAAA4G,WAAAlJ,QACAO,MAAAkJ,EAEAxJ,WAAA,SAAAqB,EAAAS,GACA7B,KAAA6B,QAAAA,IAGA,OAAA2D,KCRAvL,EAAA,wBAAA,WACA,GAAA0K,GAAA9E,WAAA+E,SAAA9E,QACAqC,SAAA,qCAEA2C,QACA0E,oBAAA,eAGAC,YAAA,SAAA/K,GACAwB,EAAAC,QAAA,cAAAuE,QAAA,eAAAhG,KAIA,OAAAiG,KCbA1K,EAAA,4BAAA,wBAAA,oBAAA,SAAAmO,EAAAW,GACA,GAAAnJ,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,cAAA,eAAAH,KAAA0J,SAGAA,OAAA,SAAAhL,GACA,GAAAiL,GAAAzJ,EAAAC,QAAA,YAAAa,QAAA,cAAA,cACA2E,EAAAgE,EAAA1B,QAGAzG,GACAoI,OAAA,YACApI,MAAAkB,SAAAmH,sBACAC,OAAA,QACAC,SAAA,YAGAC,GACAxE,WAAAmE,EAGAzJ,GAAAC,QAAA,WAAAa,QAAA,kBAAA,eAAA2E,EAAA,KAAAnE,EAAAwI,GAGA9J,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,eAKA,OAAApB,KC/BA3F,EAAA,gCAAA,WACA,GAAA2F,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAAiK,gBAGAA,cAAA,SAAAvL,EAAAqJ,GACA,GAAA5K,GAAAwC,OAAAjB,EAAAwL,QAAAC,MACAvL,EAAAe,OAAAjB,EAAAwL,QAAAF,KAAA,MACAI,EAAArC,EAAAxG,IAAA3C,EAEAe,QAAAjB,EAAAwL,QAAA/C,KAAA,aAAA6C,KAAA,SACAjC,EAAAzH,IAAA,OAAAX,OAAAjB,EAAAwL,QAAA/C,KAAA,aAAA6C,KAAA,SAGAjC,EAAAzH,IAAA1B,EAAAzB,EAEA,IAAAkN,GAAAlN,EAEAmN,GACAC,KAAA3L,EACAwL,OAAAA,EACAC,MAAAA,GAOA1E,EAAA,mBAAAoC,GAAAvC,WAAAuC,EAAAA,EAAAvC,WAAA3D,QAAA8D,eAEAqE,GACArE,eAAAA,GAGAnE,GACAoI,OAAA,YACApI,MAAA,YACAsI,OAAA,WAAAlL,EAAA,SAAAwL,EAAA,OAAAC,EAGAnK,GAAAC,QAAA,WAAAa,QAAA,kBAAA,gBAAA+G,EAAAuC,EAAA9I,EAAAwI,GAGA9J,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,eAKA,OAAApB,KClDA3F,EAAA,+BAAA,WACA,GAAA2F,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,cAAA,wBAAAH,KAAAwK,iBACAxK,KAAAC,SAAAC,EAAAC,QAAA,cAAA,0BAAAH,KAAAyK,mBACAzK,KAAAC,SAAAC,EAAAC,QAAA,cAAA,mBAAAH,KAAA0K,YACA1K,KAAAC,SAAAC,EAAAC,QAAA,cAAA,mBAAAH,KAAA2K,YACA3K,KAAAC,SAAAC,EAAAC,QAAA,cAAA,mBAAAH,KAAA4K,YACA5K,KAAAC,SAAAC,EAAAC,QAAA,cAAA,gBAAAH,KAAA6K,SACA7K,KAAAC,SAAAC,EAAAC,QAAA,cAAA,gBAAAH,KAAA8K,SACA9K,KAAAC,SAAAC,EAAAC,QAAA,cAAA,gBAAAH,KAAA+K,UAGAP,gBAAA,SAAA9L,EAAAiH,GACA,GAAAgE,GAAAhE,EAAAH,UACAG,GAAAH,WAAAwF,OAAArF,EAMA,IAAAnE,IACAoI,OAAA,YACApI,MAAAkB,SAAAuI,4BACAnB,OAAA,UACAC,SAAA,WAGAC,GACAxE,WAAAmE,EAGAzJ,GAAAC,QAAA,WAAAa,QAAA,kBAAA,kBAAA2E,EAAA,KAAAnE,EAAAwI,GAGA9J,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,cAGAyJ,kBAAA,SAAA/L,EAAAiH,GACAA,EAAArF,IAAA,aAAAqF,EAAApE,IAAA,eAGAmJ,WAAA,SAAAhM,EAAAwM,GACA,GAAA1F,GAAA0F,EAAA1F,UACAxF,MAAAmL,WAAAD,EAKA,IAAA1J,IACAoI,OAAA,mBACApI,MAAAkB,SAAA0I,2BACAtB,OAAA,UACAC,SAAA,WAGAC,GACAxE,WAAAA,EAGAtF,GAAAC,QAAA,WAAAa,QAAA,kBAAA,aAAAkK,EAAA,KAAA1J,EAAAwI,IAGAW,WAAA,SAAAjM,EAAA2M,GACA,GAAA7F,GAAA6F,EAAA7F,UACAxF,MAAAmL,WAAAE,EAKA,IAAA7J,IACAoI,OAAA,mBACApI,MAAAkB,SAAA4I,2BACAxB,OAAA,UACAC,SAAA,WAGAC,GACAxE,WAAAA,EAGAtF,GAAAC,QAAA,WAAAa,QAAA,kBAAA,aAAAqK,EAAA,KAAA7J,EAAAwI,IAGAY,WAAA,SAAAlM,EAAA6M,GACA,GAAA/F,GAAA+F,EAAA/F,UACAxF,MAAAmL,WAAAI,EAKA,IAAA/J,IACAoI,OAAA,mBACApI,MAAAkB,SAAA8I,2BACA1B,OAAA,UACAC,SAAA,WAGAC,GACAxE,WAAAA,EAGAtF,GAAAC,QAAA,WAAAa,QAAA,kBAAA,aAAAuK,EAAA,KAAA/J,EAAAwI,IAIAmB,WAAA,SAAAM,GACAA,EAAAjG,WAAAwF,OAAAS,GAGAvL,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,cAGA6J,QAAA,SAAAnM,EAAAiH,GACA,GAAAuF,GAAAvF,EAAApE,IAAA,QAAA0G,QAMAzG,GACAoI,OAAA,4BACApI,MAAAkB,SAAAgJ,mCACA5B,OAAA,QACAC,SAAA,YAGAC,GACArE,eAAAA,EAGAzF,GAAAC,QAAA,WAAAa,QAAA,kBAAA,UAAAkK,EAAA,KAAA1J,EAAAwI,GAGA9J,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,cAGA8J,QAAA,SAAApM,EAAAiH,GACA,GAAA0F,GAAA1F,EAAApE,IAAA,QAAA0G,QAMAzG,GACAoI,OAAA,sBACApI,MAAAkB,SAAAiJ,6BACA7B,OAAA,QACAC,SAAA,YAGAC,GACArE,eAAAA,EAGAzF,GAAAC,QAAA,WAAAa,QAAA,kBAAA,UAAAqK,EAAA,KAAA7J,EAAAwI,GAGA9J,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,cAGA+J,QAAA,SAAArM,EAAAiH,GACA,GAAA4F,GAAA5F,EAAApE,IAAA,QAAA0G,QAMAzG,GACAoI,OAAA,wBACApI,MAAAkB,SAAAkJ,+BACA9B,OAAA,QACAC,SAAA,YAGAC,GACArE,eAAAA,EAGAzF,GAAAC,QAAA,WAAAa,QAAA,kBAAA,UAAAuK,EAAA,KAAA/J,EAAAwI,GAGA9J,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,eAKA,OAAApB,KChMA3F,EAAA,sBAAA,WACA,GAAA2F,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACAG,EAAAC,QAAA,WAAAqI,MAAA,oBAAAxI,KAAA6L,iBAAA7L,MACAE,EAAAC,QAAA,WAAAqI,MAAA,uBAAAxI,KAAA8L,oBAAA9L,MACAE,EAAAC,QAAA,WAAAqI,MAAA,eAAAxI,KAAA+L,YAAA/L,MACAE,EAAAC,QAAA,WAAAqI,MAAA,eAAAxI,KAAAgM,YAAAhM,MACAE,EAAAC,QAAA,WAAAqI,MAAA,eAAAxI,KAAAiM,YAAAjM,MACAE,EAAAC,QAAA,WAAAqI,MAAA,kBAAAxI,KAAAkM,eAAAlM,MACAE,EAAAC,QAAA,WAAAqI,MAAA,kBAAAxI,KAAAmM,eAAAnM,MACAE,EAAAC,QAAA,WAAAqI,MAAA,kBAAAxI,KAAAoM,eAAApM,OAGA6L,iBAAA,SAAA/B,EAAAuC,GACA,GAAAtE,GAAA+B,EAAAvI,IAAA,SACAyI,EAAAF,EAAAvI,IAAA,OAEAyI,GAAAxE,WAAAwF,OAAAjD,EAKA,IAAAuE,GAAApM,EAAAC,QAAA,WAAAa,QAAA,kBACAuL,EAAAD,EAAAE,MAAA,SAAAC,GACA,UAAAA,EAAA1E,IAAA,mBAAA0E,GAAAlL,IAAA,QAAAoE,gBAAA8G,EAAAlL,IAAA,QAAAoE,gBAAAoC,IAOA7G,GAAAgB,KAAAqK,EAAA,SAAAlM,GACAiM,EAAAtB,OAAA3K,KAGAL,KAAA0M,kBAAA5C,EAAAuC,IAGAP,oBAAA,SAAAhC,EAAAuC,GACA,GAAAtE,GAAA+B,EAAAvI,IAAA,SACAyI,EAAAF,EAAAvI,IAAA,OAEAyI,GAAAxE,WAAAyC,IAAAF,GAEA/H,KAAA0M,kBAAA5C,EAAAuC,IAGAN,YAAA,SAAAjC,EAAAuC,GACA,GAAAnB,GAAApB,EAAAvI,IAAA,SACAyI,EAAAF,EAAAvI,IAAA,OAEAyI,GAAArE,eAAApE,IAAA,QAAAyJ,OAAAE,GAEAlL,KAAA0M,kBAAA5C,EAAAuC,IAGAL,YAAA,SAAAlC,EAAAuC,GACA,GAAAhB,GAAAvB,EAAAvI,IAAA,SACAyI,EAAAF,EAAAvI,IAAA,OAEAyI,GAAArE,eAAApE,IAAA,QAAAyJ,OAAAK,GAEArL,KAAA0M,kBAAA5C,EAAAuC,IAGAJ,YAAA,SAAAnC,EAAAuC,GACA,GAAAd,GAAAzB,EAAAvI,IAAA,SACAyI,EAAAF,EAAAvI,IAAA,OAEAyI,GAAArE,eAAApE,IAAA,QAAAyJ,OAAAO,GAEAvL,KAAA0M,kBAAA5C,EAAAuC,IAGAH,eAAA,SAAApC,EAAAuC,GACA,GAAAnB,GAAApB,EAAAvI,IAAA,SACAyI,EAAAF,EAAAvI,IAAA,OAEAyI,GAAAxE,WAAAyC,IAAAiD,GAEAlL,KAAA0M,kBAAA5C,EAAAuC,IAGAF,eAAA,SAAArC,EAAAuC,GACA,GAAAhB,GAAAvB,EAAAvI,IAAA,SACAyI,EAAAF,EAAAvI,IAAA,OAEAyI,GAAAxE,WAAAyC,IAAAoD,GAEArL,KAAA0M,kBAAA5C,EAAAuC,IAGAD,eAAA,SAAAtC,EAAAuC,GACA,GAAAd,GAAAzB,EAAAvI,IAAA,SACAyI,EAAAF,EAAAvI,IAAA,OAEAyI,GAAAxE,WAAAyC,IAAAsD,GAEAvL,KAAA0M,kBAAA5C,EAAAuC,IAWAK,kBAAA,SAAA5C,EAAAuC,GACA,GAAAA,GAAA,mBAAAA,IAAAA,CACA,KAAAA,EAAA,CAEAnM,EAAAC,QAAA,OAAAa,QAAA,YACA,IAAAsL,GAAApM,EAAAC,QAAA,WAAAa,QAAA,iBACAsL,GAAAtB,OAAAlB,GACA,GAAAwC,EAAA1Q,SACAsE,EAAAC,QAAA,OAAAa,QAAA,iBAAA,SAAA,GACAd,EAAAC,QAAA,OAAAa,QAAA,oBAOA,OAAApB,KC3HA3F,EAAA,iCAAA,WACA,GAAA2F,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,cAAA,cAAAH,KAAA2M,eAGAA,aAAA,SAAAjO,EAAA2M,GACA,GAAAuB,IAAA,EAKAlI,EAAA/E,OAAAjB,EAAAwL,QAAAC,KACA,QAAAzF,GACA,IAAA,aACAkI,EAAA,YACA,MACA,KAAA,aACAA,EAAA,YACA,MACA,KAAA,cAEA,KACA,KAAA,eAKA,GAAAA,EAAA,CACA,GAAAjH,GAAA0F,EAAA7F,WAAA3D,QAAA8D,cACA,oBAAAA,GAAApE,IAAA,QAAAsL,WAAApL,IAAA4J,EAAA9J,IAAA,OAAAmD,QAAAkI,KACAjH,EAAApE,IAAA,QAAA0G,KAAArG,KAAAyJ,EAAA9J,IAAA,QAAAE,IAAA4J,EAAA9J,IAAA,OAAAmD,QAAAkI,OAMA,OAAAhN,KCpCA3F,EAAA,4BAAA,WACA,GAAA2F,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACAG,EAAAC,QAAA,uBAAAqI,MAAA,iBAAAxI,KAAA8M,kBACA5M,EAAAC,QAAA,mBAAAqI,MAAA,iBAAAxI,KAAA+M,cACA7M,EAAAC,QAAA,0BAAAqI,MAAA,iBAAAxI,KAAAgN,sBAGAF,iBAAA,SAAArL,EAAAiD,EAAAvH,GACA,GAAAgF,GAAAC,SAAAC,MAAAlC,QAAA,OAAAa,QAAA,eAAA,6BACA,OAAAmB,IAAAhF,MAAAA,KAGA4P,aAAA,SAAAtL,EAAAiD,EAAAvH,GACA,GAAAyG,GAAA1D,EAAAC,QAAA,UAAAa,QAAA,YAAAS,GACAI,EAAA+B,EAAArC,IAAA,WACAY,EAAAC,SAAAC,MAAAlC,QAAA,OAAAa,QAAA,eAAA,yBACA,OAAAmB,IAAAN,QAAAA,EAAA1E,MAAAA,KAGA6P,oBAAA,SAAAvL,EAAAiD,EAAAvH,GACA,GAAAyG,GAAA1D,EAAAC,QAAA,UAAAa,QAAA,YAAAS,GACAI,EAAA+B,EAAArC,IAAA,WACAY,EAAAC,SAAAC,MAAAlC,QAAA,OAAAa,QAAA,eAAA,yBAOA,OALAa,GAAAsG,QACAjH,EAAAgB,KAAA+K,gBAAA,SAAA9P,EAAAqE,GACAK,EAAAoG,KAAAzG,MAAAA,EAAArE,MAAAA,MAGAgF,GAAAN,QAAAA,EAAA1E,MAAAA,MAMA,OAAAyC,KCpCA3F,EAAA,iCAAA,WACA,GAAA2F,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACAG,EAAAC,QAAA,uBAAAqI,MAAA,kBAAAxI,KAAAkN,wBACAhN,EAAAC,QAAA,wBAAAqI,MAAA,kBAAAxI,KAAAmN,0BACAjN,EAAAC,QAAA,yBAAAqI,MAAA,kBAAAxI,KAAAmN,0BACAjN,EAAAC,QAAA,mBAAAqI,MAAA,kBAAAxI,KAAAoN,qBAGAF,uBAAA,SAAA1K,GACA,OACA6K,IACA7L,MAAAkB,SAAA4K,kBACAnQ,MAAA,SAGAoQ,OACA/L,MAAAkB,SAAA8K,qBACArQ,MAAA,cAKAiQ,mBAAA,SAAA5K,GACA,OACAiL,KACAjM,MAAAkB,SAAAgL,2BACAvQ,MAAA,YAGAwQ,QACAnM,MAAAkB,SAAAkL,mCACAzQ,MAAA,iBAKAgQ,yBAAA,SAAA3K,EAAAD,GAQA,MAAA,YAAAA,GAAA,eAAAA,GAEAkL,KACAjM,MAAAkB,SAAAgL,2BACAvQ,MAAA,YAGAwQ,QACAnM,MAAAkB,SAAAkL,mCACAzQ,MAAA,iBAMAsQ,KACAjM,MAAAkB,SAAAgL,2BACAvQ,MAAA,SAGAwQ,QACAnM,MAAAkB,SAAAkL,mCACAzQ,MAAA,eAQA,OAAAyC,KC3EA3F,EAAA,8BAAA,WACA,GAAA2F,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACAG,EAAAC,QAAA,mBAAAqI,MAAA,eAAAxI,KAAA6N,iBACA3N,EAAAC,QAAA,qBAAAqI,MAAA,eAAAxI,KAAA8N,oBAGAD,gBAAA,SAAA9J,GACA,GAAAO,GAAApD,EAAApB,OAAAiE,GACAgK,eACAvM,MAAAkB,SAAAsL,yBACA7Q,MAAA,iBAGA8Q,iBACAzM,MAAAkB,SAAAwL,2BACA/Q,MAAA,mBAGAgR,aACA3M,MAAAkB,SAAA0L,uBACAjR,MAAA,eAGAkR,aACA7M,MAAAkB,SAAA4L,uBACAnR,MAAA,iBAIAmH,EAAApD,EAAAqC,KAAAQ,EAAA,eAEA,OAAAO,IAGAwJ,kBAAA,SAAA/J,GACA,MAAA7C,GAAAqC,KAAAQ,EAAA,kBAKA,OAAAnE,KC5CA3F,EAAA,+BAAA,sBAAA,SAAAsU,GACA,GAAA3O,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACAG,EAAAC,QAAA,qBAAAqI,MAAA,uBAAAxI,KAAAwO,oBAAAxO,OAGAwO,oBAAA,WACA,MAAAD,KAIA,OAAA3O,KCXA3F,EAAA,iCAAA,WACA,GAAA2F,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAAyO,0BACAzO,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAAyO,0BACAzO,KAAAC,SAAAC,EAAAC,QAAA,cAAA,iBAAAH,KAAAyO,2BAGAA,yBAAA,SAAAhD,GAEAA,EAAAxL,SAAAC,EAAAC,QAAA,OAAA,mBAAAH,KAAA0O,UAAAjD,IAGAiD,UAAA,SAAA9K,EAAA+K,EAAAhG,GACA,GAAAiG,GAAAD,EAAAE,oBAAA,IACAC,EAAAH,EAAApN,IAAA,MACAvB,MAAAuB,IAAA,QAAAqN,GACA5O,KAAAM,IAAA,MAAAwO,KAKA,OAAAlP,KCtBA3F,EAAA,sCAAA,yBAAA,SAAAsP,GACA,GAAA3J,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACAC,KAAAC,SAAAC,EAAAC,QAAA,WAAA,mBAAAH,KAAA+O,yBAGAA,uBAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAzN,IAAA,aACA0N,IAEA,GAAAA,YAAA7M,UAAAwG,OACAoG,EAAA1O,IAAA,aAAA,GAAAiJ,GAAA0F,IAFAD,EAAA1O,IAAA,aAAA,GAAAiJ,MAQA,OAAA3J,KCjBA3F,EAAA,yBAAA,WACA,GAAA2F,GAAAC,WAAA7B,OAAA8B,QACAmC,WAEAlC,WAAA,WACAG,EAAAC,QAAA,cAAAqI,MAAA,kBAAAxI,KAAAkP,UAAAlP,MACAE,EAAAC,QAAA,cAAAqI,MAAA,mBAAAxI,KAAAmP,WAAAnP,OAGAkP,UAAA,SAAAnQ,GACAiB,KAAAiC,QAAApF,KAAAkC,IAGAoQ,WAAA,WACA,MAAAnP,MAAAiC,UAKA,OAAArC,KCnBA3F,EAAA,+BACA,8BACA,8BACA,6BACA,qBACA,2BACA,6BACA,4BACA,mBACA,8BACA,yBACA,8BACA,2BACA,8BACA,8BACA,qCACA,uBAEA,SAEAmV,EACAC,EACAC,EACAf,EACAgB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAAtQ,GAAAC,WAAA7B,OAAA8B,QACAC,WAAA,WACA,GAAAqP,GACA,GAAAC,GACA,GAAAE,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,KAIA,OAAAtQ,IAGA,IAAAM,GAAAkC,SAAAC,KChEArI,IAAA,8BAAA,8BAAA,SAAAmW,EAAAb,GAEA,GAAAc,GAAAvQ,WAAAwQ,YAAAvQ,QAEAC,WAAA,SAAA8B,GACA7B,KAAAC,SAAAC,EAAAC,QAAA,OAAA,iBAAAH,KAAAsQ,cAGAC,QAAA,WACA,GAAAJ,IAGAG,YAAA,SAAAE,GAIA,GAAAvB,GAAA/O,EAAAC,QAAA,YAAAa,QAAA,cAAA,eAEA,GAAAiO,YAAA7M,UAAA4G,aACAiG,EAAA,GAAAK,GAAAL,GACA/O,EAAAC,QAAA,YAAAa,QAAA,iBAAA,aAAAiO,GAAA,OAKAwB,EAAA,GAAAL,EACAK,GAAAC,UAEAzW,EAAA,OAAA","file":"builder.js","sourcesContent":["(function () {\n","/**\r\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/jrburke/almond for details\r\n */\r\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\r\n//be followed.\r\n/*jslint sloppy: true */\r\n/*global setTimeout: false */\r\n\r\nvar requirejs, require, define;\r\n(function (undef) {\r\n    var main, req, makeMap, handlers,\r\n        defined = {},\r\n        waiting = {},\r\n        config = {},\r\n        defining = {},\r\n        hasOwn = Object.prototype.hasOwnProperty,\r\n        aps = [].slice,\r\n        jsSuffixRegExp = /\\.js$/;\r\n\r\n    function hasProp(obj, prop) {\r\n        return hasOwn.call(obj, prop);\r\n    }\r\n\r\n    /**\r\n     * Given a relative module name, like ./something, normalize it to\r\n     * a real name that can be mapped to a path.\r\n     * @param {String} name the relative name\r\n     * @param {String} baseName a real name that the name arg is relative\r\n     * to.\r\n     * @returns {String} normalized name\r\n     */\r\n    function normalize(name, baseName) {\r\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\r\n            foundI, foundStarMap, starI, i, j, part,\r\n            baseParts = baseName && baseName.split(\"/\"),\r\n            map = config.map,\r\n            starMap = (map && map['*']) || {};\r\n\r\n        //Adjust any relative paths.\r\n        if (name && name.charAt(0) === \".\") {\r\n            //If have a base name, try to normalize against it,\r\n            //otherwise, assume it is a top-level require that will\r\n            //be relative to baseUrl in the end.\r\n            if (baseName) {\r\n                name = name.split('/');\r\n                lastIndex = name.length - 1;\r\n\r\n                // Node .js allowance:\r\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\r\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\r\n                }\r\n\r\n                //Lop off the last part of baseParts, so that . matches the\r\n                //\"directory\" and not name of the baseName's module. For instance,\r\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\r\n                //want the directory, \"one/two\" for this normalization.\r\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\r\n\r\n                //start trimDots\r\n                for (i = 0; i < name.length; i += 1) {\r\n                    part = name[i];\r\n                    if (part === \".\") {\r\n                        name.splice(i, 1);\r\n                        i -= 1;\r\n                    } else if (part === \"..\") {\r\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\r\n                            //End of the line. Keep at least one non-dot\r\n                            //path segment at the front so it can be mapped\r\n                            //correctly to disk. Otherwise, there is likely\r\n                            //no path mapping for a path starting with '..'.\r\n                            //This can still fail, but catches the most reasonable\r\n                            //uses of ..\r\n                            break;\r\n                        } else if (i > 0) {\r\n                            name.splice(i - 1, 2);\r\n                            i -= 2;\r\n                        }\r\n                    }\r\n                }\r\n                //end trimDots\r\n\r\n                name = name.join(\"/\");\r\n            } else if (name.indexOf('./') === 0) {\r\n                // No baseName, so this is ID is resolved relative\r\n                // to baseUrl, pull off the leading dot.\r\n                name = name.substring(2);\r\n            }\r\n        }\r\n\r\n        //Apply map config if available.\r\n        if ((baseParts || starMap) && map) {\r\n            nameParts = name.split('/');\r\n\r\n            for (i = nameParts.length; i > 0; i -= 1) {\r\n                nameSegment = nameParts.slice(0, i).join(\"/\");\r\n\r\n                if (baseParts) {\r\n                    //Find the longest baseName segment match in the config.\r\n                    //So, do joins on the biggest to smallest lengths of baseParts.\r\n                    for (j = baseParts.length; j > 0; j -= 1) {\r\n                        mapValue = map[baseParts.slice(0, j).join('/')];\r\n\r\n                        //baseName segment has  config, find if it has one for\r\n                        //this name.\r\n                        if (mapValue) {\r\n                            mapValue = mapValue[nameSegment];\r\n                            if (mapValue) {\r\n                                //Match, update name to the new value.\r\n                                foundMap = mapValue;\r\n                                foundI = i;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (foundMap) {\r\n                    break;\r\n                }\r\n\r\n                //Check for a star map match, but just hold on to it,\r\n                //if there is a shorter segment match later in a matching\r\n                //config, then favor over this star map.\r\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\r\n                    foundStarMap = starMap[nameSegment];\r\n                    starI = i;\r\n                }\r\n            }\r\n\r\n            if (!foundMap && foundStarMap) {\r\n                foundMap = foundStarMap;\r\n                foundI = starI;\r\n            }\r\n\r\n            if (foundMap) {\r\n                nameParts.splice(0, foundI, foundMap);\r\n                name = nameParts.join('/');\r\n            }\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    function makeRequire(relName, forceSync) {\r\n        return function () {\r\n            //A version of a require function that passes a moduleName\r\n            //value for items that may need to\r\n            //look up paths relative to the moduleName\r\n            var args = aps.call(arguments, 0);\r\n\r\n            //If first arg is not require('string'), and there is only\r\n            //one arg, it is the array form without a callback. Insert\r\n            //a null so that the following concat is correct.\r\n            if (typeof args[0] !== 'string' && args.length === 1) {\r\n                args.push(null);\r\n            }\r\n            return req.apply(undef, args.concat([relName, forceSync]));\r\n        };\r\n    }\r\n\r\n    function makeNormalize(relName) {\r\n        return function (name) {\r\n            return normalize(name, relName);\r\n        };\r\n    }\r\n\r\n    function makeLoad(depName) {\r\n        return function (value) {\r\n            defined[depName] = value;\r\n        };\r\n    }\r\n\r\n    function callDep(name) {\r\n        if (hasProp(waiting, name)) {\r\n            var args = waiting[name];\r\n            delete waiting[name];\r\n            defining[name] = true;\r\n            main.apply(undef, args);\r\n        }\r\n\r\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\r\n            throw new Error('No ' + name);\r\n        }\r\n        return defined[name];\r\n    }\r\n\r\n    //Turns a plugin!resource to [plugin, resource]\r\n    //with the plugin being undefined if the name\r\n    //did not have a plugin prefix.\r\n    function splitPrefix(name) {\r\n        var prefix,\r\n            index = name ? name.indexOf('!') : -1;\r\n        if (index > -1) {\r\n            prefix = name.substring(0, index);\r\n            name = name.substring(index + 1, name.length);\r\n        }\r\n        return [prefix, name];\r\n    }\r\n\r\n    /**\r\n     * Makes a name map, normalizing the name, and using a plugin\r\n     * for normalization if necessary. Grabs a ref to plugin\r\n     * too, as an optimization.\r\n     */\r\n    makeMap = function (name, relName) {\r\n        var plugin,\r\n            parts = splitPrefix(name),\r\n            prefix = parts[0];\r\n\r\n        name = parts[1];\r\n\r\n        if (prefix) {\r\n            prefix = normalize(prefix, relName);\r\n            plugin = callDep(prefix);\r\n        }\r\n\r\n        //Normalize according\r\n        if (prefix) {\r\n            if (plugin && plugin.normalize) {\r\n                name = plugin.normalize(name, makeNormalize(relName));\r\n            } else {\r\n                name = normalize(name, relName);\r\n            }\r\n        } else {\r\n            name = normalize(name, relName);\r\n            parts = splitPrefix(name);\r\n            prefix = parts[0];\r\n            name = parts[1];\r\n            if (prefix) {\r\n                plugin = callDep(prefix);\r\n            }\r\n        }\r\n\r\n        //Using ridiculous property names for space reasons\r\n        return {\r\n            f: prefix ? prefix + '!' + name : name, //fullName\r\n            n: name,\r\n            pr: prefix,\r\n            p: plugin\r\n        };\r\n    };\r\n\r\n    function makeConfig(name) {\r\n        return function () {\r\n            return (config && config.config && config.config[name]) || {};\r\n        };\r\n    }\r\n\r\n    handlers = {\r\n        require: function (name) {\r\n            return makeRequire(name);\r\n        },\r\n        exports: function (name) {\r\n            var e = defined[name];\r\n            if (typeof e !== 'undefined') {\r\n                return e;\r\n            } else {\r\n                return (defined[name] = {});\r\n            }\r\n        },\r\n        module: function (name) {\r\n            return {\r\n                id: name,\r\n                uri: '',\r\n                exports: defined[name],\r\n                config: makeConfig(name)\r\n            };\r\n        }\r\n    };\r\n\r\n    main = function (name, deps, callback, relName) {\r\n        var cjsModule, depName, ret, map, i,\r\n            args = [],\r\n            callbackType = typeof callback,\r\n            usingExports;\r\n\r\n        //Use name if no relName\r\n        relName = relName || name;\r\n\r\n        //Call the callback to define the module, if necessary.\r\n        if (callbackType === 'undefined' || callbackType === 'function') {\r\n            //Pull out the defined dependencies and pass the ordered\r\n            //values to the callback.\r\n            //Default to [require, exports, module] if no deps\r\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\r\n            for (i = 0; i < deps.length; i += 1) {\r\n                map = makeMap(deps[i], relName);\r\n                depName = map.f;\r\n\r\n                //Fast path CommonJS standard dependencies.\r\n                if (depName === \"require\") {\r\n                    args[i] = handlers.require(name);\r\n                } else if (depName === \"exports\") {\r\n                    //CommonJS module spec 1.1\r\n                    args[i] = handlers.exports(name);\r\n                    usingExports = true;\r\n                } else if (depName === \"module\") {\r\n                    //CommonJS module spec 1.1\r\n                    cjsModule = args[i] = handlers.module(name);\r\n                } else if (hasProp(defined, depName) ||\r\n                           hasProp(waiting, depName) ||\r\n                           hasProp(defining, depName)) {\r\n                    args[i] = callDep(depName);\r\n                } else if (map.p) {\r\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\r\n                    args[i] = defined[depName];\r\n                } else {\r\n                    throw new Error(name + ' missing ' + depName);\r\n                }\r\n            }\r\n\r\n            ret = callback ? callback.apply(defined[name], args) : undefined;\r\n\r\n            if (name) {\r\n                //If setting exports via \"module\" is in play,\r\n                //favor that over return value and exports. After that,\r\n                //favor a non-undefined return value over exports use.\r\n                if (cjsModule && cjsModule.exports !== undef &&\r\n                        cjsModule.exports !== defined[name]) {\r\n                    defined[name] = cjsModule.exports;\r\n                } else if (ret !== undef || !usingExports) {\r\n                    //Use the return value from the function.\r\n                    defined[name] = ret;\r\n                }\r\n            }\r\n        } else if (name) {\r\n            //May just be an object definition for the module. Only\r\n            //worry about defining if have a module name.\r\n            defined[name] = callback;\r\n        }\r\n    };\r\n\r\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\r\n        if (typeof deps === \"string\") {\r\n            if (handlers[deps]) {\r\n                //callback in this case is really relName\r\n                return handlers[deps](callback);\r\n            }\r\n            //Just return the module wanted. In this scenario, the\r\n            //deps arg is the module name, and second arg (if passed)\r\n            //is just the relName.\r\n            //Normalize module name, if it contains . or ..\r\n            return callDep(makeMap(deps, callback).f);\r\n        } else if (!deps.splice) {\r\n            //deps is a config object, not an array.\r\n            config = deps;\r\n            if (config.deps) {\r\n                req(config.deps, config.callback);\r\n            }\r\n            if (!callback) {\r\n                return;\r\n            }\r\n\r\n            if (callback.splice) {\r\n                //callback is an array, which means it is a dependency list.\r\n                //Adjust args if there are dependencies\r\n                deps = callback;\r\n                callback = relName;\r\n                relName = null;\r\n            } else {\r\n                deps = undef;\r\n            }\r\n        }\r\n\r\n        //Support require(['a'])\r\n        callback = callback || function () {};\r\n\r\n        //If relName is a function, it is an errback handler,\r\n        //so remove it.\r\n        if (typeof relName === 'function') {\r\n            relName = forceSync;\r\n            forceSync = alt;\r\n        }\r\n\r\n        //Simulate async callback;\r\n        if (forceSync) {\r\n            main(undef, deps, callback, relName);\r\n        } else {\r\n            //Using a non-zero value because of concern for what old browsers\r\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\r\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\r\n            //If want a value immediately, use require('id') instead -- something\r\n            //that works in almond on the global level, but not guaranteed and\r\n            //unlikely to work in other AMD implementations.\r\n            setTimeout(function () {\r\n                main(undef, deps, callback, relName);\r\n            }, 4);\r\n        }\r\n\r\n        return req;\r\n    };\r\n\r\n    /**\r\n     * Just drops the config on the floor, but returns req in case\r\n     * the config return value is used.\r\n     */\r\n    req.config = function (cfg) {\r\n        return req(cfg);\r\n    };\r\n\r\n    /**\r\n     * Expose module registry for debugging and tooling\r\n     */\r\n    requirejs._defined = defined;\r\n\r\n    define = function (name, deps, callback) {\r\n        if (typeof name !== 'string') {\r\n            throw new Error('See almond README: incorrect module build, no module name');\r\n        }\r\n\r\n        //This module may not have dependencies\r\n        if (!deps.splice) {\r\n            //deps is not an array, so probably means\r\n            //an object literal or factory function for\r\n            //the value. Adjust args.\r\n            callback = deps;\r\n            deps = [];\r\n        }\r\n\r\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\r\n            waiting[name] = [name, deps, callback];\r\n        }\r\n    };\r\n\r\n    define.amd = {\r\n        jQuery: true\r\n    };\r\n}());\r\n\ndefine(\"../lib/almond\", function(){});\n\n","/**\r\n * Adds template helpers for the fields conditional logic setting type\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/templateHelpers',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:model', this.addTemplateHelpers );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:thenModel', this.addTemplateHelpers );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:whenModel', this.addTemplateHelpers );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:elseModel', this.addTemplateHelpers );\r\n\t\t\t\r\n\t\t},\r\n\r\n\t\taddTemplateHelpers: function( model ) {\r\n\t\t\tmodel.set( 'renderKeySelect', this.renderKeySelect );\r\n\t\t\tmodel.set( 'renderComparators', this.renderComparators );\r\n\t\t\tmodel.set( 'renderTriggers', this.renderTriggers );\r\n\t\t\tmodel.set( 'renderWhenValue', this.renderWhenValue );\r\n\t\t\tmodel.set( 'renderItemValue', this.renderItemValue );\r\n\t\t},\r\n\r\n\t\trenderKeySelect: function( currentValue, modelType ) {\r\n\t\t\t\r\n\t\t\tvar groups = []\r\n\r\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\r\n\t\t\tvar fieldOptions = _.chain( fieldCollection.models )\r\n\t\t\t\t.filter( function( field ) { return ! nfRadio.channel( 'conditions-key-select-field-' + field.get( 'type' ) ).request( 'hide', modelType ) || false; })\r\n\t\t\t\t.map( function( field ) {\r\n                    var label = field.get( 'label' )\r\n\t\t\t\t\tif( 'undefined' !== typeof field.get( 'admin_label' ) && 0 < field.get( 'admin_label' ).length ){\r\n                    \tlabel = field.get( 'admin_label' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn { key: field.get( 'key' ), label: label }; }\r\n\t\t\t\t)\r\n\t\t\t\t.sortBy( function( field ){\r\n\t\t\t\t\treturn field.label.toLowerCase();\r\n\t\t\t\t} )\r\n\t\t\t\t.value();\r\n\r\n\t\t\tgroups.push( { label: 'Fields', type: 'field', options: fieldOptions } );\r\n\t\t\t\r\n\t\t\tvar calcCollection = nfRadio.channel( 'settings' ).request( 'get:setting', 'calculations' );\r\n\r\n\t\t\t/*\r\n\t\t\t * If we are working on a 'when' model and we have calculations, add them to our select options.\r\n\t\t\t */\r\n\t\t\tif ( 'when' == modelType && 0 < calcCollection.length ) {\r\n\t\t\t\tvar calcOptions = calcCollection.map( function( calc ) {\r\n\t\t\t\t\treturn { key: calc.get( 'name' ), label: calc.get( 'name' ) };\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tgroups.push( { label: 'Calculations', type: 'calc', options: calcOptions } );\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\t * Pass our groups through any 'when/then' group filters we have.\r\n\t\t\t */\r\n\t\t\tvar filters = nfRadio.channel( 'conditions' ).request( 'get:groupFilters' );\r\n\t\t\t_.each( filters, function( filter ) {\r\n\t\t\t\tgroups = filter( groups, modelType );\r\n\t\t\t} );\r\n\r\n\t\t\t/*\r\n\t\t\t * Use a template to get our field select\r\n\t\t\t */\r\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-key-select' );\r\n\r\n\t\t\tvar tmp = template( { groups: groups, currentValue: currentValue } );\r\n\t\t\treturn tmp;\r\n\t\t},\r\n\r\n\t\trenderComparators: function( type, key, currentComparator ) {\r\n\t\t\tvar defaultComparators = {\r\n\t\t\t\tequal: {\r\n\t\t\t\t\tlabel: nfcli18n.templateHelperEquals,\r\n\t\t\t\t\tvalue: 'equal'\r\n\t\t\t\t},\r\n\r\n\t\t\t\tnotequal: {\r\n\t\t\t\t\tlabel: nfcli18n.templateHelperDoesNotEqual,\r\n\t\t\t\t\tvalue: 'notequal'\r\n\t\t\t\t},\r\n\r\n\t\t\t\tcontains: {\r\n\t\t\t\t\tlabel: nfcli18n.templateHelperContains,\r\n\t\t\t\t\tvalue: 'contains'\r\n\t\t\t\t},\r\n\r\n\t\t\t\tnotcontains: {\r\n\t\t\t\t\tlabel: nfcli18n.templateHelperDoesNotContain,\r\n\t\t\t\t\tvalue: 'notcontains'\r\n\t\t\t\t},\r\n\r\n\t\t\t\tgreater: {\r\n\t\t\t\t\tlabel: nfcli18n.templateHelperGreaterThan,\r\n\t\t\t\t\tvalue: 'greater'\r\n\t\t\t\t},\r\n\r\n\t\t\t\tless: {\r\n\t\t\t\t\tlabel: nfcli18n.templateHelperLessThan,\r\n\t\t\t\t\tvalue: 'less'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif ( key ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * This could be a field or a calculation key. If it's a calc key, get the calc model.\r\n\t\t\t\t */\r\n\t\t\t\tif ( 'calc' == type ) {\r\n\t\t\t\t\tvar comparators = _.omit( defaultComparators, 'contains', 'notcontains' );\r\n\t\t\t\t\t_.extend( comparators, {\r\n\t\t\t\t\t\tlessequal: {\r\n\t\t\t\t\t\t\tlabel: nfcli18n.templateHelperLessThanOrEqual,\r\n\t\t\t\t\t\t\tvalue: 'lessequal'\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\tgreaterequal: {\r\n\t\t\t\t\t\t\tlabel: nfcli18n.templateHelperGreaterThanOrEqual,\r\n\t\t\t\t\t\t\tvalue: 'greaterequal'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Send out a radio request for an html value on a channel based upon the field type.\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * Get our field by key\r\n\t\t\t\t\t * Get our field type model\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * Send out a message on the type channel\r\n\t\t\t\t\t * If we don't get a response, send a message out on the parent type channel\r\n\t\t\t\t\t */\r\n\t\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', key );\r\n\r\n\t\t\t\t\tif( fieldModel ) {\r\n\t\t\t\t\t\tvar comparators = nfRadio.channel('conditions-' + fieldModel.get('type')).request('get:comparators', defaultComparators, currentComparator );\r\n\t\t\t\t\t\tif (!comparators) {\r\n\t\t\t\t\t\t\tvar typeModel = nfRadio.channel('fields').request('get:type', fieldModel.get('type'));\r\n\t\t\t\t\t\t\tcomparators = nfRadio.channel('conditions-' + typeModel.get('parentType')).request('get:comparators', defaultComparators, currentComparator ) || defaultComparators;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar comparators = defaultComparators;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar comparators = defaultComparators;\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\t * Use a template to get our comparator select\r\n\t\t\t */\r\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-comparators' );\r\n\t\t\treturn template( { comparators: comparators, currentComparator: currentComparator } );\r\n\t\t},\r\n\r\n\t\trenderTriggers: function( type, key, currentTrigger, value ) {\r\n\t\t\tvar defaultTriggers = {\r\n\t\t\t\tshow_field: {\r\n\t\t\t\t\tlabel: nfcli18n.templateHelperShowField,\r\n\t\t\t\t\tvalue: 'show_field'\r\n\t\t\t\t},\r\n\r\n\t\t\t\thide_field: {\r\n\t\t\t\t\tlabel: nfcli18n.templateHelperHideField,\r\n\t\t\t\t\tvalue: 'hide_field'\r\n\t\t\t\t},\r\n\r\n\t\t\t\tchange_value: {\r\n\t\t\t\t\tlabel: nfcli18n.templateHelperChangeValue,\r\n\t\t\t\t\tvalue: 'change_value'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif ( key && 'field' == type ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Send out a radio request for an html value on a channel based upon the field type.\r\n\t\t\t\t *\r\n\t\t\t\t * Get our field by key\r\n\t\t\t\t * Get our field type model\r\n\t\t\t\t *\r\n\t\t\t\t * Send out a message on the type channel\r\n\t\t\t\t * If we don't get a response, send a message out on the parent type channel\r\n\t\t\t\t */\r\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', key );\r\n\r\n\t\t\t\tif( 'undefined' != typeof fieldModel ) {\r\n\t\t\t\t\tvar typeModel = nfRadio.channel('fields').request('get:type', fieldModel.get('type'));\r\n\r\n\t\t\t\t\tvar triggers = nfRadio.channel('conditions-' + fieldModel.get('type')).request('get:triggers', defaultTriggers);\r\n\t\t\t\t\tif (!triggers) {\r\n\t\t\t\t\t\ttriggers = nfRadio.channel('conditions-' + typeModel.get('parentType')).request('get:triggers', defaultTriggers) || defaultTriggers;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar triggers = nfRadio.channel( 'conditions-' + type ).request( 'get:triggers', defaultTriggers ) || defaultTriggers;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar triggers = nfRadio.channel( 'conditions-' + type ).request( 'get:triggers', defaultTriggers ) || defaultTriggers;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t/*\r\n\t\t\t * Use a template to get our comparator select\r\n\t\t\t */\r\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-triggers' );\r\n\t\t\treturn template( { triggers: triggers, currentTrigger: currentTrigger } );\r\n\t\t},\r\n\r\n\t\trenderWhenValue: function( type, key, comparator, value ) {\r\n\t\t\t/*\r\n\t\t\t * Use a template to get our value\r\n\t\t\t */\r\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-value-default' );\r\n\t\t\tvar defaultHTML = template( { value: value } );\r\n\r\n\t\t\t/*\r\n\t\t\t * If we have a key and it's not a calc, get our field type based HTML.\r\n\t\t\t */\r\n\t\t\tif ( key && 'calc' != type ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Send out a radio request for an html value on a channel based upon the field type.\r\n\t\t\t\t *\r\n\t\t\t\t * Get our field by key\r\n\t\t\t\t * Get our field type model\r\n\t\t\t\t *\r\n\t\t\t\t * Send out a message on the type channel\r\n\t\t\t\t * If we don't get a response, send a message out on the parent type channel\r\n\t\t\t\t */\r\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', key );\r\n\r\n\t\t\t\tif( fieldModel ) {\r\n\t\t\t\t\tvar html = nfRadio.channel('conditions-' + fieldModel.get('type')).request('get:valueInput', key, comparator, value);\r\n\t\t\t\t\tif (!html) {\r\n\t\t\t\t\t\tvar typeModel = nfRadio.channel('fields').request('get:type', fieldModel.get('type'));\r\n\t\t\t\t\t\thtml = nfRadio.channel('conditions-' + typeModel.get('parentType')).request('get:valueInput', key, comparator, value) || defaultHTML;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\thtml = defaultHTML;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar html = defaultHTML;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn html;\r\n\t\t},\r\n\r\n\t\trenderItemValue: function( key, trigger, value ) {\r\n\t\t\t/*\r\n\t\t\t * Use a template to get our value\r\n\t\t\t *\r\n\t\t\t * TODO: This should be much more dynamic.\r\n\t\t\t * At the moment, we manually check to see if we are doing a \"change_value\" or similar trigger.\r\n\t\t\t */\r\n\t\t\tif ( trigger != 'change_value'\r\n\t\t\t\t&& trigger != 'select_option'\r\n\t\t\t\t&& trigger != 'deselect_option'\r\n\t\t\t\t&& trigger != 'show_option'\r\n\t\t\t\t&& trigger != 'hide_option' \r\n\t\t\t) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-value-default' );\r\n\t\t\tvar defaultHTML = template( { value: value } );\r\n\r\n\t\t\tif ( key ) {\r\n\t\t\t\t/*\r\n\t\t\t\t * Send out a radio request for an html value on a channel based upon the field type.\r\n\t\t\t\t *\r\n\t\t\t\t * Get our field by key\r\n\t\t\t\t * Get our field type model\r\n\t\t\t\t *\r\n\t\t\t\t * Send out a message on the type channel\r\n\t\t\t\t * If we don't get a response, send a message out on the parent type channel\r\n\t\t\t\t */\r\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', key );\r\n\r\n\t\t\t\tif( 'undefined' != typeof fieldModel ) {\r\n\t\t\t\t\tvar typeModel = nfRadio.channel('fields').request('get:type', fieldModel.get('type'));\r\n\t\t\t\t\tvar html = nfRadio.channel('conditions-' + fieldModel.get('type')).request('get:valueInput', key, trigger, value);\r\n\t\t\t\t\tif (!html) {\r\n\t\t\t\t\t\thtml = nfRadio.channel('conditions-' + typeModel.get('parentType')).request('get:valueInput', key, trigger, value) || defaultHTML;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar html = defaultHTML;\r\n\t\t\t}\r\n\r\n\t\t\treturn html;\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","/**\r\n * Item view for our condition and\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'views/advanced/whenItem',[], function( ) {\r\n\tvar view = Marionette.ItemView.extend({\r\n\t\ttemplate: \"#tmpl-nf-cl-advanced-when-item\",\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( this.model, 'change', this.render );\r\n\t\t},\r\n\t\t\r\n\t\tevents: {\r\n\t\t\t'change .setting': 'changeSetting',\r\n\t\t\t'click .nf-remove-when': 'clickRemove'\r\n\t\t},\r\n\r\n\t\tchangeSetting: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:setting', e, this.model )\r\n\t\t},\r\n\r\n\t\tclickRemove: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:removeWhen', e, this.model );\r\n\t\t}\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","/**\r\n * Item view for our condition's first when\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'views/advanced/firstWhenItem',[], function( ) {\r\n\tvar view = Marionette.ItemView.extend({\r\n\t\ttemplate: \"#tmpl-nf-cl-advanced-first-when-item\",\r\n\t\t\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( this.model, 'change', this.render );\r\n\t\t},\r\n\r\n\t\tevents: {\r\n\t\t\t'change .setting': 'changeSetting'\r\n\t\t},\r\n\r\n\t\tchangeSetting: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:setting', e, this.model )\r\n\t\t}\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","/**\r\n * Collection view for our when collection\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'views/advanced/whenCollection',[ 'views/advanced/whenItem', 'views/advanced/firstWhenItem' ], function( WhenItem, FirstWhenItem ) {\r\n\tvar view = Marionette.CollectionView.extend({\r\n\t\tgetChildView: function( item ) {\r\n\t\t\tif ( item.collection.first() == item ) {\r\n\t\t\t\treturn FirstWhenItem;\r\n\t\t\t} else {\r\n\t\t\t\treturn WhenItem;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\r\n\t\tinitialize: function( options ) {\r\n\t\t\tthis.firstWhenDiv = options.firstWhenDiv;\r\n\t\t\tthis.conditionModel = options.conditionModel;\r\n\t\t},\r\n\r\n    \t// The default implementation:\r\n\t  \tattachHtml: function( collectionView, childView, index ) {\r\n\t\t  \tif ( 0 == index ) {\r\n\t\t  \t\tthis.firstWhenDiv.append( childView.el );\r\n\t\t  \t} else {\r\n\t\t  \t\tif ( ! this.conditionModel.get( 'collapsed' ) ) {\r\n\t\t\t\t    if (collectionView.isBuffering) {\r\n\t\t\t\t    \t// buffering happens on reset events and initial renders\r\n\t\t\t\t    \t// in order to reduce the number of inserts into the\r\n\t\t\t\t    \t// document, which are expensive.\r\n\t\t\t\t    \tcollectionView._bufferedChildren.splice(index, 0, childView);\r\n\t\t\t\t    } else {\r\n\t\t\t\t\t\t// If we've already rendered the main collection, append\r\n\t\t\t\t\t\t// the new child into the correct order if we need to. Otherwise\r\n\t\t\t\t\t\t// append to the end.\r\n\t\t\t\t\t\tif (!collectionView._insertBefore(childView, index)){\r\n\t\t\t\t\t\t\tcollectionView._insertAfter(childView);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t    }\t\t\t  \t\t\t\r\n\t\t  \t\t}\r\n\t\t  \t}\r\n\t  \t},\r\n\r\n\t} );\r\n\r\n\treturn view;\r\n} );\n","/**\r\n * Item view for our condition then\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'views/advanced/thenItem',[], function( ) {\r\n\tvar view = Marionette.ItemView.extend({\r\n\t\ttemplate: \"#tmpl-nf-cl-trigger-item\",\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( this.model, 'change', this.render );\r\n\t\t},\r\n\r\n\t\tevents: {\r\n\t\t\t'change .setting': 'changeSetting',\r\n\t\t\t'click .nf-remove-then': 'clickRemove'\r\n\t\t},\r\n\r\n\t\tchangeSetting: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:setting', e, this.model );\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:then', e, this.model );\r\n\t\t},\r\n\r\n\t\tclickRemove: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:removeThen', e, this.model );\r\n\t\t}\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","/**\r\n * Collection view for our then statements\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'views/advanced/thenCollection',[ 'views/advanced/thenItem' ], function( ThenItem ) {\r\n\tvar view = Marionette.CollectionView.extend({\r\n\t\tchildView: ThenItem,\r\n\r\n\t\tinitialize: function( options ) {\r\n\r\n\t\t}\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","/**\r\n * Item view for our condition then\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'views/advanced/elseItem',[], function( ) {\r\n\tvar view = Marionette.ItemView.extend({\r\n\t\ttemplate: \"#tmpl-nf-cl-trigger-item\",\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( this.model, 'change', this.render );\r\n\t\t},\r\n\r\n\t\tevents: {\r\n\t\t\t'change .setting': 'changeSetting',\r\n\t\t\t'click .nf-remove-else': 'clickRemove'\r\n\t\t},\r\n\r\n\t\tchangeSetting: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:setting', e, this.model )\r\n\t\t},\r\n\r\n\t\tclickRemove: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:removeElse', e, this.model );\r\n\t\t}\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","/**\r\n * Collection view for our else statements\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'views/advanced/elseCollection',[ 'views/advanced/elseItem' ], function( ElseItem ) {\r\n\tvar view = Marionette.CollectionView.extend({\r\n\t\tchildView: ElseItem,\r\n\r\n\t\tinitialize: function( options ) {\r\n\r\n\t\t}\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","/**\r\n * Layout view for our conditions\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'views/advanced/conditionItem',[ 'views/advanced/whenCollection', 'views/advanced/thenCollection', 'views/advanced/elseCollection' ], function( WhenCollectionView, ThenCollectionView, ElseCollectionView ) {\r\n\tvar view = Marionette.LayoutView.extend({\r\n\t\ttemplate: \"#tmpl-nf-cl-advanced-condition\",\r\n\t\tregions: {\r\n\t\t\t'when': '.nf-when-region',\r\n\t\t\t'then': '.nf-then-region',\r\n\t\t\t'else': '.nf-else-region'\r\n\t\t},\r\n\r\n\t\tinitialize: function() {\r\n\t\t\t/*\r\n\t\t\t * When we change the \"collapsed\" attribute of our model, re-render.\r\n\t\t\t */\r\n\t\t\tthis.listenTo( this.model, 'change:collapsed', this.render );\r\n\r\n\t\t\t/*\r\n\t\t\t * When our drawer closes, send out a radio message on our setting type channel.\r\n\t\t\t */\r\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'closed', this.drawerClosed );\r\n\t\t},\r\n\r\n\t\tonRender: function() {\r\n\t\t\tvar firstWhenDiv = jQuery( this.el ).find( '.nf-first-when' );\r\n\t\t\tthis.when.show( new WhenCollectionView( { collection: this.model.get( 'when' ), firstWhenDiv: firstWhenDiv, conditionModel: this.model } ) );\r\n\t\t\tif ( ! this.model.get( 'collapsed' ) ) {\r\n\t\t\t\tthis.then.show( new ThenCollectionView( { collection: this.model.get( 'then' ) } ) );\r\n\t\t\t\tthis.else.show( new ElseCollectionView( { collection: this.model.get( 'else' ) } ) );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tevents: {\r\n\t\t\t'click .nf-remove-condition': 'clickRemove',\r\n\t\t\t'click .nf-collapse-condition': 'clickCollapse',\r\n\t\t\t'click .nf-add-when': 'clickAddWhen',\r\n\t\t\t'click .nf-add-then': 'clickAddThen',\r\n\t\t\t'click .nf-add-else': 'clickAddElse'\r\n\t\t},\r\n\r\n\t\tclickRemove: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:removeCondition', e, this.model );\r\n\t\t},\r\n\r\n\t\tclickCollapse: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:collapseCondition', e, this.model );\r\n\t\t},\r\n\r\n\t\tclickAddWhen: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:addWhen', e, this.model );\r\n\t\t},\r\n\r\n\t\tclickAddThen: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:addThen', e, this.model );\r\n\t\t},\r\n\r\n\t\tclickAddElse: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:addElse', e, this.model );\r\n\t\t}\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","/**\r\n * Collection view for our conditions\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'views/advanced/conditionCollection',[ 'views/advanced/conditionItem' ], function( conditionItem ) {\r\n\tvar view = Marionette.CollectionView.extend({\r\n\t\tchildView: conditionItem,\r\n\r\n\t\tinitialize: function( options ) {\r\n\t\t\tthis.collection = options.dataModel.get( 'conditions' );\r\n\t\t},\r\n\r\n        onShow: function() {\r\n            /*\r\n             * If we don't have any conditions, add an empty one as we render.\r\n             */\r\n            if ( 0 == this.collection.length ) {\r\n                this.collection.add( {} );\r\n            }\r\n        },\r\n\r\n        onBeforeDestroy: function() {\r\n            /*\r\n             * If we don't have any conditions or we have more than one, just return.\r\n             */\r\n            if ( 0 == this.collection.length || 1 < this.collection.length ) return;\r\n            /*\r\n             * If we only have one condition, and we didn't change the \"key\" attribute, reset our collection.\r\n             * This empties it.\r\n             */\r\n            if ( '' == this.collection.models[0].get( 'when' ).models[0].get( 'key' ) ) {\r\n                this.collection.reset();\r\n            }\r\n        }\r\n\t});\r\n\r\n\treturn view;\r\n} );\r\n\n","/**\r\n * Item view for our condition and\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'views/actions/whenItem',[], function( ) {\r\n\tvar view = Marionette.ItemView.extend({\r\n\t\ttemplate: \"#tmpl-nf-cl-actions-condition-when\",\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( this.model, 'change', this.render );\r\n\t\t},\r\n\t\t\r\n\t\tevents: {\r\n\t\t\t'change .setting': 'changeSetting',\r\n\t\t\t'click .nf-remove-when': 'clickRemove'\r\n\t\t},\r\n\r\n\t\tchangeSetting: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:setting', e, this.model )\r\n\t\t},\r\n\r\n\t\tclickRemove: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:removeWhen', e, this.model );\r\n\t\t}\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","/**\r\n * Collection view for our when collection\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'views/actions/whenCollection',[ 'views/actions/whenItem' ], function( WhenItem ) {\r\n\tvar view = Marionette.CollectionView.extend({\r\n\t\tchildView: WhenItem,\r\n\r\n\t\tinitialize: function( options ) {\r\n\r\n\t\t},\r\n\r\n        onShow: function() {\r\n            /*\r\n             * If we don't have any conditions, add an empty one as we render.\r\n             */\r\n            if ( 0 == this.collection.length ) {\r\n                this.collection.add( {} );\r\n            }\r\n        },\r\n\r\n        onBeforeDestroy: function() {\r\n            /*\r\n             * If we don't have any conditions or we have more than one, just return.\r\n             */\r\n            if ( 0 == this.collection.length || 1 < this.collection.length ) return;\r\n            /*\r\n             * If we only have one condition, and we didn't change the \"key\" attribute, reset our collection.\r\n             * This empties it.\r\n             */\r\n            if ( '' == this.collection.models[0].get( 'key' ) ) {\r\n                this.collection.reset();\r\n            }\r\n        }\r\n\r\n\t} );\r\n\r\n\treturn view;\r\n} );\n","/**\r\n * Layout view for our Action condition\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'views/actions/conditionLayout',[ 'views/actions/whenCollection' ], function( WhenCollection ) {\r\n\tvar view = Marionette.LayoutView.extend( {\r\n\t\ttemplate: '#tmpl-nf-cl-actions-condition-layout',\r\n\r\n\t\tregions: {\r\n\t\t\t'when': '.nf-when'\r\n\t\t},\r\n\r\n\t\tinitialize: function( options ) {\r\n\t\t\tthis.model = options.dataModel.get( 'conditions' );\r\n\t\t\tif ( ! options.dataModel.get( 'conditions' ) ) return;\r\n\r\n\t\t\tthis.collection = options.dataModel.get( 'conditions' ).get( 'when' );\r\n\t\t\tthis.conditionModel = options.dataModel.get( 'conditions' );\r\n\t\t},\r\n\r\n\t\tonRender: function() {\r\n\t\t\tif ( ! this.collection ) return;\r\n\t\t\t/*\r\n\t\t\t * Show our \"when\" collection in the \"when\" area.\r\n\t\t\t */\r\n\t\t\tthis.when.show( new WhenCollection( { collection: this.collection } ) );\r\n\t\t},\r\n\r\n\t\tevents: {\r\n\t\t\t'change .condition-setting': 'changeSetting',\r\n\t\t\t'click .nf-add-when': 'clickAddWhen'\r\n\t\t},\r\n\r\n\t\tclickAddWhen: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:addWhen', e, this.model );\r\n\t\t},\r\n\r\n\t\tchangeSetting: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'change:setting', e, this.model )\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","/**\r\n * Returns the childview we need to use for our conditional logic form settings.\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/returnChildView',[ 'views/advanced/conditionCollection', 'views/actions/conditionLayout' ], function( AdvancedView, ActionsView ) {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'advanced_conditions' ).reply( 'get:settingChildView', this.getAdvancedChildView );\r\n\t\t\tnfRadio.channel( 'action_conditions' ).reply( 'get:settingChildView', this.getActionChildView );\r\n\t\t},\r\n\r\n\t\tgetAdvancedChildView: function( settingModel ) {\r\n\t\t\treturn AdvancedView;\r\n\t\t},\r\n\r\n\t\tgetActionChildView: function( settingModel ) {\r\n\t\t\treturn ActionsView;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","/**\r\n * When Model\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'models/whenModel',[], function() {\r\n\tvar model = Backbone.Model.extend( {\r\n\t\tdefaults: {\r\n\t\t\tconnector: 'AND',\r\n\t\t\tkey: '',\r\n\t\t\tcomparator: '',\r\n\t\t\tvalue: '',\r\n\t\t\ttype: 'field',\r\n\t\t\tmodelType: 'when'\r\n\t\t},\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'init:whenModel', this );\r\n\t\t}\r\n\t} );\r\n\t\r\n\treturn model;\r\n} );\n","/**\r\n * When Collection\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'models/whenCollection',['models/whenModel'], function( WhenModel ) {\r\n\tvar collection = Backbone.Collection.extend( {\r\n\t\tmodel: WhenModel,\r\n\r\n\t\tinitialize: function( models, options ) {\r\n\t\t\tthis.options = options;\r\n\t\t}\r\n\t} );\r\n\treturn collection;\r\n} );\n","/**\r\n * Then Model\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'models/thenModel',[], function() {\r\n\tvar model = Backbone.Model.extend( {\r\n\t\tdefaults: {\r\n\t\t\tkey: '',\r\n\t\t\ttrigger: '',\r\n\t\t\tvalue: '',\r\n\t\t\ttype: 'field',\r\n\t\t\tmodelType: 'then'\r\n\t\t},\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'init:thenModel', this );\r\n\t\t}\r\n\t} );\r\n\t\r\n\treturn model;\r\n} );\n","/**\r\n * Then Collection\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'models/thenCollection',['models/thenModel'], function( ThenModel ) {\r\n\tvar collection = Backbone.Collection.extend( {\r\n\t\tmodel: ThenModel,\r\n\r\n\t\tinitialize: function( models, options ) {\r\n\t\t\tthis.options = options;\r\n\t\t}\r\n\t} );\r\n\treturn collection;\r\n} );\n","/**\r\n * Else Model\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'models/elseModel',[], function() {\r\n\tvar model = Backbone.Model.extend( {\r\n\t\tdefaults: {\r\n\t\t\tkey: '',\r\n\t\t\ttrigger: '',\r\n\t\t\tvalue: '',\r\n\t\t\ttype: 'field',\r\n\t\t\tmodelType: 'else'\r\n\t\t},\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'init:elseModel', this );\r\n\t\t}\r\n\t} );\r\n\t\r\n\treturn model;\r\n} );\n","/**\r\n * Else Collection\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'models/elseCollection',['models/elseModel'], function( ElseModel ) {\r\n\tvar collection = Backbone.Collection.extend( {\r\n\t\tmodel: ElseModel,\r\n\r\n\t\tinitialize: function( models, options ) {\r\n\t\t\tthis.options = options;\r\n\t\t}\r\n\t} );\r\n\treturn collection;\r\n} );\n","/**\r\n * Conditon Model\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'models/conditionModel',[ 'models/whenCollection', 'models/thenCollection', 'models/elseCollection' ], function( WhenCollection, ThenCollection, ElseCollection ) {\r\n\tvar model = Backbone.Model.extend( {\r\n\t\tdefaults: {\r\n\t\t\tcollapsed: false,\r\n\t\t\tprocess: 1,\r\n\t\t\tconnector: 'all',\r\n\t\t\twhen: [ {} ],\r\n\t\t\tthen: [ {} ],\r\n\t\t\telse: []\r\n\t\t},\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.set( 'when', new WhenCollection( this.get( 'when' ), { conditionModel: this } ) );\r\n\t\t\tthis.set( 'then', new ThenCollection( this.get( 'then' ), { conditionModel: this } ) );\r\n\t\t\tthis.set( 'else', new ElseCollection( this.get( 'else' ), { conditionModel: this } ) );\r\n\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'init:model', this );\r\n\t\t}\r\n\t} );\r\n\t\r\n\treturn model;\r\n} );\n","/**\r\n * Conditon Collection\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'models/conditionCollection',['models/conditionModel'], function( ConditionModel ) {\r\n\tvar collection = Backbone.Collection.extend( {\r\n\t\tmodel: ConditionModel,\r\n\r\n\t\tinitialize: function( models, options ) {\r\n\t\t\tthis.options = options;\r\n\t\t}\r\n\t} );\r\n\treturn collection;\r\n} );\n","/**\r\n * Item view for our drawer header\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'views/drawerHeader',[], function( ) {\r\n\tvar view = Marionette.ItemView.extend({\r\n\t\ttemplate: \"#tmpl-nf-cl-advanced-drawer-header\",\r\n\r\n\t\tevents: {\r\n\t\t\t'click .nf-add-new': 'clickAddNew'\r\n\t\t},\r\n\r\n\t\tclickAddNew: function( e ) {\r\n\t\t\tnfRadio.channel( 'conditions' ).trigger( 'click:addNew', e );\r\n\t\t}\r\n\t});\r\n\r\n\treturn view;\r\n} );\n","/**\r\n * Adds a new condition when the add new button is clicked.\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/newCondition',[ 'models/whenCollection', 'models/whenModel' ], function( WhenCollection, WhenModel ) {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:addNew', this.addNew );\r\n\t\t},\r\n\r\n\t\taddNew: function( e ) {\r\n\t\t\tvar conditionCollection = nfRadio.channel( 'settings' ).request( 'get:setting', 'conditions' );\r\n\t\t\tvar conditionModel = conditionCollection.add( {} );\r\n\r\n\t\t\t// Add our condition addition to our change log.\r\n\t\t\tvar label = {\r\n\t\t\t\tobject: 'Condition',\r\n\t\t\t\tlabel: nfcli18n.newConditionCondition,\r\n\t\t\t\tchange: 'Added',\r\n\t\t\t\tdashicon: 'plus-alt'\r\n\t\t\t};\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tcollection: conditionCollection\r\n\t\t\t}\r\n\r\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addCondition', conditionModel, null, label, data );\r\n\r\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","/**\r\n * Updates condition settings on field change or drawer close\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/updateSettings',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'change:setting', this.updateSetting );\r\n\t\t},\r\n\r\n\t\tupdateSetting: function( e, dataModel ) {\r\n\t\t\tvar value = jQuery( e.target ).val();\r\n\t\t\tvar id = jQuery( e.target ).data( 'id' );\r\n\t\t\tvar before = dataModel.get( id );\r\n\r\n\t\t\tif ( jQuery( e.target ).find( ':selected' ).data( 'type' ) ) {\r\n\t\t\t\tdataModel.set( 'type', jQuery( e.target ).find( ':selected' ).data( 'type' ) );\r\n\t\t\t}\r\n\r\n\t\t\tdataModel.set( id, value );\r\n\r\n\t\t\tvar after = value;\r\n\r\n\t\t\tvar changes = {\r\n\t\t\t\tattr: id,\r\n\t\t\t\tbefore: before,\r\n\t\t\t\tafter: after\r\n\t\t\t};\r\n\r\n\t\t\t/*\r\n\t\t\t * The \"Advanced\" domain uses a collection of conditions, while the \"Actions\" domain uses a single collection.\r\n\t\t\t * Here, if we don't have a collection property, then dataModel must be our conditionModel.\r\n\t\t\t */\r\n\t\t\tvar conditionModel = ( 'undefined' == typeof dataModel.collection ) ? dataModel : dataModel.collection.options.conditionModel;\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tconditionModel: conditionModel\r\n\t\t\t}\r\n\r\n\t\t\tvar label = {\r\n\t\t\t\tobject: 'Condition',\r\n\t\t\t\tlabel: 'Condition',\r\n\t\t\t\tchange: 'Changed ' + id + ' from ' + before + ' to ' + after\r\n\t\t\t};\r\n\r\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', dataModel, changes, label, data );\r\n\r\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","/**\r\n * Listens for clicks on our different condition controls\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/clickControls',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:removeCondition', this.removeCondition );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:collapseCondition', this.collapseCondition );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:removeWhen', this.removeWhen );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:removeThen', this.removeThen );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:removeElse', this.removeElse );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:addWhen', this.addWhen );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:addThen', this.addThen );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'click:addElse', this.addElse );\r\n\t\t},\r\n\r\n\t\tremoveCondition: function( e, conditionModel ) {\r\n\t\t\tvar conditionCollection = conditionModel.collection;\r\n\t\t\tconditionModel.collection.remove( conditionModel );\r\n\r\n\t\t\t/*\r\n\t\t\t * Register our remove condition event with our changes manager\r\n\t\t\t */\r\n\r\n\t\t\tvar label = {\r\n\t\t\t\tobject: 'Condition',\r\n\t\t\t\tlabel: nfcli18n.clickControlsConditionlabel,\r\n\t\t\t\tchange: 'Removed',\r\n\t\t\t\tdashicon: 'dismiss'\r\n\t\t\t};\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tcollection: conditionCollection\r\n\t\t\t}\r\n\r\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeCondition', conditionModel, null, label, data );\r\n\r\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\r\n\t\t},\r\n\r\n\t\tcollapseCondition: function( e, conditionModel ) {\r\n\t\t\tconditionModel.set( 'collapsed', ! conditionModel.get( 'collapsed' ) );\r\n\t\t},\r\n\r\n\t\tremoveWhen: function( e, whenModel ) {\r\n\t\t\tvar collection = whenModel.collection;\r\n\t\t\tthis.removeItem( whenModel );\r\n\t\t\t/*\r\n\t\t\t * Register our remove when change.\r\n\t\t\t */\r\n\t\t\t\r\n\t\t\tvar label = {\r\n\t\t\t\tobject: 'Condition - When',\r\n\t\t\t\tlabel: nfcli18n.clickControlsConditionWhen,\r\n\t\t\t\tchange: 'Removed',\r\n\t\t\t\tdashicon: 'dismiss'\r\n\t\t\t};\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tcollection: collection\r\n\t\t\t}\r\n\r\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeWhen', whenModel, null, label, data );\r\n\t\t},\r\n\r\n\t\tremoveThen: function( e, thenModel ) {\r\n\t\t\tvar collection = thenModel.collection;\r\n\t\t\tthis.removeItem( thenModel );\r\n\t\t\t/*\r\n\t\t\t * Register our remove then change.\r\n\t\t\t */\r\n\t\t\t\r\n\t\t\tvar label = {\r\n\t\t\t\tobject: 'Condition - Then',\r\n\t\t\t\tlabel: nfcli18n.clickControlsConditionThen,\r\n\t\t\t\tchange: 'Removed',\r\n\t\t\t\tdashicon: 'dismiss'\r\n\t\t\t};\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tcollection: collection\r\n\t\t\t}\r\n\r\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeThen', thenModel, null, label, data );\r\n\t\t},\r\n\r\n\t\tremoveElse: function( e, elseModel ) {\r\n\t\t\tvar collection = elseModel.collection;\r\n\t\t\tthis.removeItem( elseModel );\r\n\t\t\t/*\r\n\t\t\t * Register our remove else change.\r\n\t\t\t */\r\n\t\t\t\r\n\t\t\tvar label = {\r\n\t\t\t\tobject: 'Condition - Else',\r\n\t\t\t\tlabel: nfcli18n.clickControlsConditionElse,\r\n\t\t\t\tchange: 'Removed',\r\n\t\t\t\tdashicon: 'dismiss'\r\n\t\t\t};\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tcollection: collection\r\n\t\t\t}\r\n\r\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeElse', elseModel, null, label, data );\r\n\t\t\t\r\n\t\t},\r\n\r\n\t\tremoveItem: function( itemModel ) {\r\n\t\t\titemModel.collection.remove( itemModel );\r\n\r\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\r\n\t\t},\r\n\r\n\t\taddWhen: function( e, conditionModel ) {\r\n\t\t\tvar whenModel = conditionModel.get( 'when' ).add( {} );\r\n\r\n\t\t\t/*\r\n\t\t\t * Register our add when as a change.\r\n\t\t\t */\r\n\t\t\t\r\n\t\t\tvar label = {\r\n\t\t\t\tobject: 'Condition - When Criteron',\r\n\t\t\t\tlabel: nfcli18n.clickControlsConditionWhenCriteron,\r\n\t\t\t\tchange: 'Added',\r\n\t\t\t\tdashicon: 'plus-alt'\r\n\t\t\t};\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tconditionModel: conditionModel\r\n\t\t\t}\r\n\r\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addWhen', whenModel, null, label, data );\r\n\r\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\r\n\t\t},\r\n\r\n\t\taddThen: function( e, conditionModel ) {\r\n\t\t\tvar thenModel = conditionModel.get( 'then' ).add( {} );\r\n\r\n\t\t\t/*\r\n\t\t\t * Register our add then as a change.\r\n\t\t\t */\r\n\t\t\t\r\n\t\t\tvar label = {\r\n\t\t\t\tobject: 'Condition - Do Item',\r\n\t\t\t\tlabel: nfcli18n.clickControlsConditionDoItem,\r\n\t\t\t\tchange: 'Added',\r\n\t\t\t\tdashicon: 'plus-alt'\r\n\t\t\t};\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tconditionModel: conditionModel\r\n\t\t\t}\r\n\r\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addThen', thenModel, null, label, data );\r\n\r\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\r\n\t\t},\r\n\r\n\t\taddElse: function( e, conditionModel ) {\r\n\t\t\tvar elseModel = conditionModel.get( 'else' ).add( {} );\r\n\r\n\t\t\t/*\r\n\t\t\t * Register our add when as a change.\r\n\t\t\t */\r\n\t\t\t\r\n\t\t\tvar label = {\r\n\t\t\t\tobject: 'Condition - Else Item',\r\n\t\t\t\tlabel: nfcli18n.clickControlsConditionElseItem,\r\n\t\t\t\tchange: 'Added',\r\n\t\t\t\tdashicon: 'plus-alt'\r\n\t\t\t};\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tconditionModel: conditionModel\r\n\t\t\t}\r\n\r\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addElse', elseModel, null, label, data );\r\n\r\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\r\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","/**\r\n * Handles undoing everything for conditions.\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/undo',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addCondition', this.undoAddCondition, this );\r\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeCondition', this.undoRemoveCondition, this );\r\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addWhen', this.undoAddWhen, this );\r\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addThen', this.undoAddThen, this );\r\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addElse', this.undoAddElse, this );\r\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeWhen', this.undoRemoveWhen, this );\r\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeThen', this.undoRemoveThen, this );\r\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeElse', this.undoRemoveElse, this );\r\n\t\t},\r\n\r\n\t\tundoAddCondition: function( change, undoAll ) {\r\n\t\t\tvar dataModel = change.get( 'model' );\r\n\t\t\tvar data = change.get( 'data' );\r\n\t\t\t\r\n\t\t\tdata.collection.remove( dataModel );\r\n\r\n\t\t\t/*\r\n\t\t\t * Loop through our change collection and remove any setting changes that belong to the condition we've added.\r\n\t\t\t */\r\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\r\n\t\t\tvar results = changeCollection.where( function( changeModel ) {\r\n\t\t\t\tif ( ( changeModel = dataModel ) || 'undefined' != typeof changeModel.get( 'data' ).conditionModel && changeModel.get( 'data' ).conditionModel == dataModel ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t_.each( results, function( model ) {\r\n\t\t\t\tchangeCollection.remove( model );\r\n\t\t\t} );\r\n\r\n\t\t\tthis.maybeRemoveChange( change, undoAll );\r\n\t\t},\r\n\r\n\t\tundoRemoveCondition: function( change, undoAll ) {\r\n\t\t\tvar dataModel = change.get( 'model' );\r\n\t\t\tvar data = change.get( 'data' );\r\n\t\t\t\r\n\t\t\tdata.collection.add( dataModel );\r\n\r\n\t\t\tthis.maybeRemoveChange( change, undoAll );\r\n\t\t},\r\n\r\n\t\tundoAddWhen: function( change, undoAll ) {\r\n\t\t\tvar whenModel = change.get( 'model' );\r\n\t\t\tvar data = change.get( 'data' );\r\n\t\t\t\r\n\t\t\tdata.conditionModel.get( 'when' ).remove( whenModel );\r\n\r\n\t\t\tthis.maybeRemoveChange( change, undoAll );\r\n\t\t},\r\n\r\n\t\tundoAddThen: function( change, undoAll ) {\r\n\t\t\tvar thenModel = change.get( 'model' );\r\n\t\t\tvar data = change.get( 'data' );\r\n\t\t\t\r\n\t\t\tdata.conditionModel.get( 'then' ).remove( thenModel );\r\n\r\n\t\t\tthis.maybeRemoveChange( change, undoAll );\r\n\t\t},\r\n\r\n\t\tundoAddElse: function( change, undoAll ) {\r\n\t\t\tvar elseModel = change.get( 'model' );\r\n\t\t\tvar data = change.get( 'data' );\r\n\t\t\t\r\n\t\t\tdata.conditionModel.get( 'else' ).remove( elseModel );\r\n\r\n\t\t\tthis.maybeRemoveChange( change, undoAll );\r\n\t\t},\r\n\r\n\t\tundoRemoveWhen: function( change, undoAll ) {\r\n\t\t\tvar whenModel = change.get( 'model' );\r\n\t\t\tvar data = change.get( 'data' );\r\n\t\t\t\r\n\t\t\tdata.collection.add( whenModel );\r\n\r\n\t\t\tthis.maybeRemoveChange( change, undoAll );\r\n\t\t},\r\n\r\n\t\tundoRemoveThen: function( change, undoAll ) {\r\n\t\t\tvar thenModel = change.get( 'model' );\r\n\t\t\tvar data = change.get( 'data' );\r\n\t\t\t\r\n\t\t\tdata.collection.add( thenModel );\r\n\r\n\t\t\tthis.maybeRemoveChange( change, undoAll );\r\n\t\t},\r\n\r\n\t\tundoRemoveElse: function( change, undoAll ) {\r\n\t\t\tvar elseModel = change.get( 'model' );\r\n\t\t\tvar data = change.get( 'data' );\r\n\t\t\t\r\n\t\t\tdata.collection.add( elseModel );\r\n\r\n\t\t\tthis.maybeRemoveChange( change, undoAll );\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * If our undo action was requested to 'remove' the change from the collection, remove it.\r\n\t\t * \r\n\t\t * @since  3.0\r\n\t\t * @param  backbone.model \tchange \tmodel of our change\r\n\t\t * @param  boolean \t\t\tremove \tshould we remove this item from our change collection\r\n\t\t * @return void\r\n\t\t */\r\n\t\tmaybeRemoveChange: function( change, undoAll ) {\t\t\t\r\n\t\t\tvar undoAll = typeof undoAll !== 'undefined' ? undoAll : false;\r\n\t\t\tif ( ! undoAll ) {\r\n\t\t\t\t// Update preview.\r\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\r\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\r\n\t\t\t\tchangeCollection.remove( change );\r\n\t\t\t\tif ( 0 == changeCollection.length ) {\r\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\r\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","/**\r\n * Listen to changes of any \"then\" conditions.\r\n * \r\n * If the value is 'show_field' or 'hide_field' and we have not yet added an \"opposite,\" set an \"opposite\" action in the \"else\" section.\r\n * \r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/maybeModifyElse',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'change:then', this.maybeAddElse );\r\n\t\t},\r\n\r\n\t\tmaybeAddElse: function( e, thenModel ) {\r\n\t\t\tvar opposite = false;\r\n\t\t\t/*\r\n\t\t\t * TODO: Make this more dynamic.\r\n\t\t\t * Currently, show, hide, show option, and hide option are hard-coded here.\r\n\t\t\t */\r\n\t\t\tvar trigger = jQuery( e.target ).val();\r\n\t\t\tswitch( trigger ) {\r\n\t\t\t\tcase 'show_field':\r\n\t\t\t\t\topposite = 'hide_field';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hide_field':\r\n\t\t\t\t\topposite = 'show_field';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'show_option':\r\n\t\t\t\t\t// opposite = 'hide_option';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hide_option':\r\n\t\t\t\t\t// opposite = 'show_option';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif ( opposite ) {\r\n\t\t\t\tvar conditionModel = thenModel.collection.options.conditionModel\r\n\t\t\t\tif( 'undefined' == typeof conditionModel.get( 'else' ).findWhere( { 'key': thenModel.get( 'key' ), 'trigger': opposite } ) ) {\r\n\t\t\t\t\tconditionModel.get( 'else' ).add( { type: thenModel.get( 'type' ), key: thenModel.get( 'key' ), trigger: opposite } );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","/**\r\n * Returns the type of input value we'd like to use.\r\n * This covers all the core field types.\r\n *\r\n * Add-ons can copy this code structure in order to get custom \"values\" for conditions.\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/coreValues',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'conditions-checkbox' ).reply( 'get:valueInput', this.getCheckboxValue );\r\n\t\t\tnfRadio.channel( 'conditions-list' ).reply( 'get:valueInput', this.getListValue );\r\n\t\t\tnfRadio.channel( 'conditions-listcountry' ).reply( 'get:valueInput', this.getListCountryValue );\r\n\t\t},\r\n\r\n\t\tgetCheckboxValue: function( key, trigger, value ) {\r\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-value-checkbox' );\r\n\t\t\treturn template( { value: value } );\r\n\t\t},\r\n\r\n\t\tgetListValue: function( key, trigger, value ) {\r\n\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', key );\r\n\t\t\tvar options = fieldModel.get( 'options' );\r\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-value-list' );\r\n\t\t\treturn template( { options: options, value: value } );\r\n\t\t},\r\n\r\n\t\tgetListCountryValue: function( key, trigger, value ) {\r\n\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', key );\r\n\t\t\tvar options = fieldModel.get( 'options' );\r\n\t\t\tvar template = Backbone.Radio.channel( 'app' ).request( 'get:template', '#tmpl-nf-cl-value-list' );\r\n\r\n\t\t\toptions.reset();\r\n\t\t\t_.each( nfListCountries, function( value, label ) {\r\n\t\t\t\toptions.add( { label: label, value: value } );\r\n\t\t\t});\r\n\r\n\t\t\treturn template( { options: options, value: value } );\r\n\t\t}\r\n\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","/**\r\n * Returns an object with each comparator we'd like to use.\r\n * This covers all the core field types.\r\n *\r\n * Add-ons can copy this code structure in order to get custom \"comparators\" for conditions.\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/coreComparators',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'conditions-checkbox' ).reply( 'get:comparators', this.getCheckboxComparators );\r\n\t\t\tnfRadio.channel( 'conditions-listradio' ).reply( 'get:comparators', this.getListSingleComparators );\r\n\t\t\tnfRadio.channel( 'conditions-listselect' ).reply( 'get:comparators', this.getListSingleComparators );\r\n\t\t\tnfRadio.channel( 'conditions-list' ).reply( 'get:comparators', this.getListComparators );\r\n\t\t},\r\n\r\n\t\tgetCheckboxComparators: function( defaultComparators ) {\r\n\t\t\treturn {\r\n\t\t\t\tis: {\r\n\t\t\t\t\tlabel: nfcli18n.coreComparatorsIs,\r\n\t\t\t\t\tvalue: 'equal'\r\n\t\t\t\t},\r\n\r\n\t\t\t\tisnot: {\r\n\t\t\t\t\tlabel: nfcli18n.coreComparatorsIsNot,\r\n\t\t\t\t\tvalue: 'notequal'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetListComparators: function( defaultComparators ) {\r\n\t\t\treturn {\r\n\t\t\t\thas: {\r\n\t\t\t\t\tlabel: nfcli18n.coreComparatorsHasSelected,\r\n\t\t\t\t\tvalue: 'contains'\r\n\t\t\t\t},\r\n\r\n\t\t\t\thasnot: {\r\n\t\t\t\t\tlabel: nfcli18n.coreComparatorsDoesNotHaveSelected,\r\n\t\t\t\t\tvalue: 'notcontains'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetListSingleComparators: function( defaultComparators, currentComparator ) {\r\n\t\t\t/*\r\n\t\t\t * Radio and Select lists need to use equal and notequal.\r\n\t\t\t * In previous versions, however, they used contains and notcontains.\r\n\t\t\t * In order to keep forms working that were made in those previous versions,\r\n\t\t\t * we check to see if the currentComparator is contains or notcontains.\r\n\t\t\t * If it is, we return those values; else we return equal or not equal.\r\n\t\t\t */\r\n\t\t\tif ( 'contains' == currentComparator || 'notcontains' == currentComparator ) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\thas: {\r\n\t\t\t\t\t\tlabel: nfcli18n.coreComparatorsHasSelected,\r\n\t\t\t\t\t\tvalue: 'contains'\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\thasnot: {\r\n\t\t\t\t\t\tlabel: nfcli18n.coreComparatorsDoesNotHaveSelected,\r\n\t\t\t\t\t\tvalue: 'notcontains'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t\thas: {\r\n\t\t\t\t\t\tlabel: nfcli18n.coreComparatorsHasSelected,\r\n\t\t\t\t\t\tvalue: 'equal'\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\thasnot: {\r\n\t\t\t\t\t\tlabel: nfcli18n.coreComparatorsDoesNotHaveSelected,\r\n\t\t\t\t\t\tvalue: 'notequal'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t},\r\n\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","/**\r\n * Returns an object with each trigger we'd like to use.\r\n * This covers all the core field types.\r\n *\r\n * Add-ons can copy this code structure in order to get custom \"triggers\" for conditions.\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/coreTriggers',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'conditions-list' ).reply( 'get:triggers', this.getListTriggers );\r\n\t\t\tnfRadio.channel( 'conditions-submit' ).reply( 'get:triggers', this.getSubmitTriggers );\r\n\t\t},\r\n\r\n\t\tgetListTriggers: function( defaultTriggers ) {\r\n\t\t\tvar triggers = _.extend( defaultTriggers, {\r\n\t\t\t\tselect_option: {\r\n\t\t\t\t\tlabel: nfcli18n.coreTriggersSelectOption,\r\n\t\t\t\t\tvalue: 'select_option'\r\n\t\t\t\t},\r\n\r\n\t\t\t\tdeselect_option: {\r\n\t\t\t\t\tlabel: nfcli18n.coreTriggersDeselectOption,\r\n\t\t\t\t\tvalue: 'deselect_option'\r\n\t\t\t\t},\r\n\r\n\t\t\t\tshow_option: {\r\n\t\t\t\t\tlabel: nfcli18n.coreTriggersShowOption,\r\n\t\t\t\t\tvalue: 'show_option'\r\n\t\t\t\t},\r\n\r\n\t\t\t\thide_option: {\r\n\t\t\t\t\tlabel: nfcli18n.coreTriggersHideOption,\r\n\t\t\t\t\tvalue: 'hide_option'\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tvar triggers = _.omit( defaultTriggers, 'change_value' );\r\n\r\n\t\t\treturn triggers;\r\n\t\t},\r\n\r\n\t\tgetSubmitTriggers: function( defaultTriggers ) {\r\n\t\t\treturn _.omit( defaultTriggers, 'change_value' );\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","/**\r\n * Returns the view to use in the drawer header.\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/getDrawerHeader',[ 'views/drawerHeader' ], function( DrawerHeaderView ) {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'conditional_logic' ).reply( 'get:drawerHeaderView', this.getDrawerHeaderView, this );\r\n\t\t},\r\n\r\n\t\tgetDrawerHeaderView: function() {\r\n\t\t\treturn DrawerHeaderView;\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","/**\r\n * Tracks key changes and updates when/then/else models\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/trackKeyChanges',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:whenModel', this.registerKeyChangeTracker );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:thenModel', this.registerKeyChangeTracker );\r\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'init:elseModel', this.registerKeyChangeTracker );\r\n\t\t},\r\n\r\n\t\tregisterKeyChangeTracker: function( itemModel ) {\r\n            // Update selected field if the selected field's key changes.\r\n            itemModel.listenTo( nfRadio.channel( 'app' ), 'replace:fieldKey', this.updateKey, itemModel );\r\n        },\r\n\r\n\t\tupdateKey: function( fieldModel, keyModel, settingModel ) {\r\n\t\t\tvar oldKey = keyModel._previousAttributes[ 'key' ];\r\n            var newKey = keyModel.get( 'key' );\r\n            if( this.get( 'key' ) == oldKey ) {\r\n                this.set( 'key', newKey );\r\n            }\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\n","/**\r\n * When we init our action model, check to see if we have a 'conditions' setting that needs to be converted into a collection.\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/maybeConvertConditions',[ 'models/conditionModel' ], function( ConditionModel ) {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'actions' ), 'init:actionModel', this.maybeConvertConditions );\r\n\t\t},\r\n\r\n\t\tmaybeConvertConditions: function( actionModel ) {\r\n\t\t\tvar conditions = actionModel.get( 'conditions' );\r\n\t\t\tif ( ! conditions ) {\r\n\t\t\t\tactionModel.set( 'conditions', new ConditionModel() );\r\n\t\t\t} else if ( false === conditions instanceof Backbone.Model ) {\r\n\t\t\t\tactionModel.set( 'conditions', new ConditionModel( conditions ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","/**\r\n * Register filters for our when/then key groups/settings.\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/filters',[], function() {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tfilters: [],\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tnfRadio.channel( 'conditions' ).reply( 'add:groupFilter', this.addFilter, this );\r\n\t\t\tnfRadio.channel( 'conditions' ).reply( 'get:groupFilters', this.getFilters, this );\r\n\t\t},\r\n\r\n\t\taddFilter: function( callback ) {\r\n\t\t\tthis.filters.push( callback );\r\n\t\t},\r\n\r\n\t\tgetFilters: function() {\r\n\t\t\treturn this.filters;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","/**\r\n * Loads all of our custom controllers.\r\n *\r\n * @package Ninja Forms Conditional Logic\r\n * @copyright (c) 2016 WP Ninjas\r\n * @since 3.0\r\n */\r\ndefine( 'controllers/loadControllers',[\r\n\t'controllers/templateHelpers',\r\n\t'controllers/returnChildView',\r\n\t'models/conditionCollection',\r\n\t'views/drawerHeader',\r\n\t'controllers/newCondition',\r\n\t'controllers/updateSettings',\r\n\t'controllers/clickControls',\r\n\t'controllers/undo',\r\n\t'controllers/maybeModifyElse',\r\n\t'controllers/coreValues',\r\n\t'controllers/coreComparators',\r\n\t'controllers/coreTriggers',\r\n\t'controllers/getDrawerHeader',\r\n\t'controllers/trackKeyChanges',\r\n\t'controllers/maybeConvertConditions',\r\n\t'controllers/filters'\r\n\r\n\t], function(\r\n\r\n\tTemplateHelpers,\r\n\tReturnChildView,\r\n\tConditionCollection,\r\n\tDrawerHeaderView,\r\n\tNewCondition,\r\n\tUpdateSettings,\r\n\tClickControls,\r\n\tUndo,\r\n\tMaybeModifyElse,\r\n\tCoreValues,\r\n\tCoreComparators,\r\n\tCoreTriggers,\r\n\tGetDrawerHeader,\r\n\tTrackKeyChanges,\r\n\tMaybeConvertConditions,\r\n\tFilters\r\n\t) {\r\n\tvar controller = Marionette.Object.extend( {\r\n\t\tinitialize: function() {\r\n\t\t\tnew TemplateHelpers();\r\n\t\t\tnew ReturnChildView();\r\n\t\t\tnew NewCondition();\r\n\t\t\tnew UpdateSettings();\r\n\t\t\tnew ClickControls();\r\n\t\t\tnew Undo();\r\n\t\t\tnew MaybeModifyElse();\r\n\t\t\tnew CoreValues();\r\n\t\t\tnew CoreComparators();\r\n\t\t\tnew CoreTriggers();\r\n\t\t\tnew GetDrawerHeader();\r\n\t\t\tnew TrackKeyChanges();\r\n\t\t\tnew MaybeConvertConditions();\r\n\t\t\tnew Filters();\r\n\t\t}\r\n\t});\r\n\r\n\treturn controller;\r\n} );\r\n\n","var nfRadio = Backbone.Radio;\r\n\r\nrequire( [ 'controllers/loadControllers', 'models/conditionCollection' ], function( LoadControllers, ConditionCollection ) {\r\n\r\n\tvar NFConditionalLogic = Marionette.Application.extend( {\r\n\r\n\t\tinitialize: function( options ) {\r\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'after:appStart', this.afterNFLoad );\r\n\t\t},\r\n\r\n\t\tonStart: function() {\r\n\t\t\tnew LoadControllers();\r\n\t\t},\r\n\r\n\t\tafterNFLoad: function( app ) {\r\n\t\t\t/*\r\n\t\t\t * Convert our form's \"condition\" setting into a collection.\r\n\t\t\t */\r\n\t\t\tvar conditions = nfRadio.channel( 'settings' ).request( 'get:setting', 'conditions' );\r\n\r\n\t\t\tif ( false === conditions instanceof Backbone.Collection ) {\r\n\t\t\t\tconditions = new ConditionCollection( conditions );\r\n\t\t\t\tnfRadio.channel( 'settings' ).request( 'update:setting', 'conditions', conditions, true );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\tvar nfConditionalLogic = new NFConditionalLogic();\r\n\tnfConditionalLogic.start();\r\n} );\ndefine(\"main\", function(){});\n\n"]}